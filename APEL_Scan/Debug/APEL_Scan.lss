
APEL_Scan.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000050  00800100  00000eb0  00000f24  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000eb0  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      0000005c  00000000  00000000  00000f74  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000fd0  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000078  00000000  00000000  00001010  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000fde  00000000  00000000  00001088  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000007e2  00000000  00000000  00002066  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000005fb  00000000  00000000  00002848  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000118  00000000  00000000  00002e44  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000493  00000000  00000000  00002f5c  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000003a6  00000000  00000000  000033ef  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000068  00000000  00000000  00003795  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
   8:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
   c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  10:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  14:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  18:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  1c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  20:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  24:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  28:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  2c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  30:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  34:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  38:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  3c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  40:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  44:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  48:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  4c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  50:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  54:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  58:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  5c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  60:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  64:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	e0 eb       	ldi	r30, 0xB0	; 176
  7c:	fe e0       	ldi	r31, 0x0E	; 14
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	a0 35       	cpi	r26, 0x50	; 80
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>
  8a:	0e 94 ca 01 	call	0x394	; 0x394 <main>
  8e:	0c 94 56 07 	jmp	0xeac	; 0xeac <_exit>

00000092 <__bad_interrupt>:
  92:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000096 <lcd_cmd>:
	lcd_cmd(0X80);				// set position [1,1]
}

void lcd_cmd(char cmd_out)
{
	data=cmd_out;					// set the command across LCD data register
  96:	85 b9       	out	0x05, r24	; 5
	PORTD=(0<<rs)|(0<<rw)|(1<<en);	// enable LCD to receive command
  98:	80 e2       	ldi	r24, 0x20	; 32
  9a:	8b b9       	out	0x0b, r24	; 11
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  9c:	83 ef       	ldi	r24, 0xF3	; 243
  9e:	91 e0       	ldi	r25, 0x01	; 1
  a0:	01 97       	sbiw	r24, 0x01	; 1
  a2:	f1 f7       	brne	.-4      	; 0xa0 <lcd_cmd+0xa>
  a4:	00 c0       	rjmp	.+0      	; 0xa6 <lcd_cmd+0x10>
  a6:	00 00       	nop
	_delay_ms(2);
	PORTD=(0<<rs)|(0<<rw)|(0<<en);	// latch last command
  a8:	1b b8       	out	0x0b, r1	; 11
  aa:	83 ef       	ldi	r24, 0xF3	; 243
  ac:	91 e0       	ldi	r25, 0x01	; 1
  ae:	01 97       	sbiw	r24, 0x01	; 1
  b0:	f1 f7       	brne	.-4      	; 0xae <lcd_cmd+0x18>
  b2:	00 c0       	rjmp	.+0      	; 0xb4 <lcd_cmd+0x1e>
  b4:	00 00       	nop
  b6:	08 95       	ret

000000b8 <lcd_init>:
	}
}

void lcd_init()
{
	lcd_cmd(0X38);				// initialize 2 lines, 5x7 font for 16x2 LCD
  b8:	88 e3       	ldi	r24, 0x38	; 56
  ba:	0e 94 4b 00 	call	0x96	; 0x96 <lcd_cmd>
	lcd_cmd(0X0C);				// display on, cursor off
  be:	8c e0       	ldi	r24, 0x0C	; 12
  c0:	0e 94 4b 00 	call	0x96	; 0x96 <lcd_cmd>
	lcd_cmd(0X01);				// clear screen
  c4:	81 e0       	ldi	r24, 0x01	; 1
  c6:	0e 94 4b 00 	call	0x96	; 0x96 <lcd_cmd>
	lcd_cmd(0X80);				// set position [1,1]
  ca:	80 e8       	ldi	r24, 0x80	; 128
  cc:	0e 94 4b 00 	call	0x96	; 0x96 <lcd_cmd>
  d0:	08 95       	ret

000000d2 <lcd_data>:
	_delay_ms(2);
}

void lcd_data(char data_out)
{
	data=data_out;					// set the data across the LCD data register	
  d2:	85 b9       	out	0x05, r24	; 5
	PORTD=(1<<rs)|(0<<rw)|(1<<en);	// enable LCD to receive data
  d4:	88 e2       	ldi	r24, 0x28	; 40
  d6:	8b b9       	out	0x0b, r24	; 11
  d8:	83 ef       	ldi	r24, 0xF3	; 243
  da:	91 e0       	ldi	r25, 0x01	; 1
  dc:	01 97       	sbiw	r24, 0x01	; 1
  de:	f1 f7       	brne	.-4      	; 0xdc <lcd_data+0xa>
  e0:	00 c0       	rjmp	.+0      	; 0xe2 <lcd_data+0x10>
  e2:	00 00       	nop
	_delay_ms(2);
	PORTD=(1<<rs)|(0<<rw)|(0<<en);	// latch last data
  e4:	88 e0       	ldi	r24, 0x08	; 8
  e6:	8b b9       	out	0x0b, r24	; 11
  e8:	83 ef       	ldi	r24, 0xF3	; 243
  ea:	91 e0       	ldi	r25, 0x01	; 1
  ec:	01 97       	sbiw	r24, 0x01	; 1
  ee:	f1 f7       	brne	.-4      	; 0xec <lcd_data+0x1a>
  f0:	00 c0       	rjmp	.+0      	; 0xf2 <lcd_data+0x20>
  f2:	00 00       	nop
  f4:	08 95       	ret

000000f6 <lcd_str>:
	_delay_ms(2);
}

void lcd_str(char *str)
{
  f6:	cf 93       	push	r28
  f8:	df 93       	push	r29
  fa:	ec 01       	movw	r28, r24
	unsigned int i=0;
	while(str[i]!='\0')		// print each character in string to LCD
  fc:	88 81       	ld	r24, Y
  fe:	88 23       	and	r24, r24
 100:	31 f0       	breq	.+12     	; 0x10e <lcd_str+0x18>
 102:	21 96       	adiw	r28, 0x01	; 1
	{
		lcd_data(str[i]);
 104:	0e 94 69 00 	call	0xd2	; 0xd2 <lcd_data>
}

void lcd_str(char *str)
{
	unsigned int i=0;
	while(str[i]!='\0')		// print each character in string to LCD
 108:	89 91       	ld	r24, Y+
 10a:	81 11       	cpse	r24, r1
 10c:	fb cf       	rjmp	.-10     	; 0x104 <lcd_str+0xe>
	{
		lcd_data(str[i]);
		i++;
	}
}
 10e:	df 91       	pop	r29
 110:	cf 91       	pop	r28
 112:	08 95       	ret

00000114 <adc_init>:

void adc_init()
{
	ADMUX = (0<<REFS1|1<<REFS0);	// Aref = Vcc
 114:	80 e4       	ldi	r24, 0x40	; 64
 116:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x7e007c>
	
	/* the ADC needs a clock signal between 50kHz and 200kHz, with internal 1MHz clock,
	   a prescaler of 8 gives the ADC a clock of 125kHz */
	
	ADCSRA = (0<<ADPS2)|(1<<ADPS1)|(1<<ADPS0)|(1<<ADEN);	// enable ADC, set prescaler to 8
 11a:	83 e8       	ldi	r24, 0x83	; 131
 11c:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7e007a>
 120:	08 95       	ret

00000122 <adc_initBG>:
}

void adc_initBG()
{
	ADMUX = (1<<REFS1|1<<REFS1);	// Aref = 1.1V inernal bandgap reference
 122:	80 e8       	ldi	r24, 0x80	; 128
 124:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x7e007c>
	
	ADCSRA = (0<<ADPS2)|(1<<ADPS1)|(1<<ADPS0)|(1<<ADEN);	// enable ADC, set prescaler to 8
 128:	83 e8       	ldi	r24, 0x83	; 131
 12a:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7e007a>
 12e:	08 95       	ret

00000130 <read_adc>:
}

uint16_t read_adc(uint8_t channel)
{
	ADMUX = (ADMUX & 0xF0) | (channel & 0x0F);	// select ADC channel
 130:	ec e7       	ldi	r30, 0x7C	; 124
 132:	f0 e0       	ldi	r31, 0x00	; 0
 134:	90 81       	ld	r25, Z
 136:	8f 70       	andi	r24, 0x0F	; 15
 138:	90 7f       	andi	r25, 0xF0	; 240
 13a:	89 2b       	or	r24, r25
 13c:	80 83       	st	Z, r24
	ADCSRA |= (1<<ADSC);						// select single conversion mode
 13e:	ea e7       	ldi	r30, 0x7A	; 122
 140:	f0 e0       	ldi	r31, 0x00	; 0
 142:	80 81       	ld	r24, Z
 144:	80 64       	ori	r24, 0x40	; 64
 146:	80 83       	st	Z, r24
	while( ADCSRA & (1<<ADSC) );				// wait until ADC conversion is complete
 148:	80 81       	ld	r24, Z
 14a:	86 fd       	sbrc	r24, 6
 14c:	fd cf       	rjmp	.-6      	; 0x148 <read_adc+0x18>
	return ADC;
 14e:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7e0078>
 152:	90 91 79 00 	lds	r25, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7e0079>
}
 156:	08 95       	ret

00000158 <print_volt>:

void print_volt(float voltage)
{
 158:	8f 92       	push	r8
 15a:	9f 92       	push	r9
 15c:	af 92       	push	r10
 15e:	bf 92       	push	r11
 160:	cf 92       	push	r12
 162:	df 92       	push	r13
 164:	ef 92       	push	r14
 166:	ff 92       	push	r15
 168:	cf 93       	push	r28
 16a:	df 93       	push	r29
 16c:	cd b7       	in	r28, 0x3d	; 61
 16e:	de b7       	in	r29, 0x3e	; 62
 170:	60 97       	sbiw	r28, 0x10	; 16
 172:	0f b6       	in	r0, 0x3f	; 63
 174:	f8 94       	cli
 176:	de bf       	out	0x3e, r29	; 62
 178:	0f be       	out	0x3f, r0	; 63
 17a:	cd bf       	out	0x3d, r28	; 61
 17c:	4b 01       	movw	r8, r22
 17e:	5c 01       	movw	r10, r24
	int intV;
	float diffV;
	int decV;
	char number[16];	// character array for converting doubles to string
	
	intV = (int) voltage;
 180:	0e 94 4d 03 	call	0x69a	; 0x69a <__fixsfsi>
 184:	6b 01       	movw	r12, r22
 186:	7c 01       	movw	r14, r24
	diffV = voltage - (float)intV;
 188:	07 2e       	mov	r0, r23
 18a:	00 0c       	add	r0, r0
 18c:	88 0b       	sbc	r24, r24
 18e:	99 0b       	sbc	r25, r25
 190:	0e 94 85 03 	call	0x70a	; 0x70a <__floatsisf>
 194:	9b 01       	movw	r18, r22
 196:	ac 01       	movw	r20, r24
 198:	c5 01       	movw	r24, r10
 19a:	b4 01       	movw	r22, r8
 19c:	0e 94 6e 02 	call	0x4dc	; 0x4dc <__subsf3>
	decV = (int) (diffV*1000);
 1a0:	20 e0       	ldi	r18, 0x00	; 0
 1a2:	30 e0       	ldi	r19, 0x00	; 0
 1a4:	4a e7       	ldi	r20, 0x7A	; 122
 1a6:	54 e4       	ldi	r21, 0x44	; 68
 1a8:	0e 94 11 04 	call	0x822	; 0x822 <__mulsf3>
 1ac:	0e 94 4d 03 	call	0x69a	; 0x69a <__fixsfsi>
 1b0:	86 2f       	mov	r24, r22
 1b2:	97 2f       	mov	r25, r23
	
	if(decV < 10){	// decimal values of 0.00
 1b4:	8a 30       	cpi	r24, 0x0A	; 10
 1b6:	91 05       	cpc	r25, r1
 1b8:	a4 f4       	brge	.+40     	; 0x1e2 <print_volt+0x8a>
		sprintf(number, "%u.00%u V", intV, decV);		// convert voltage to string
 1ba:	7f 93       	push	r23
 1bc:	6f 93       	push	r22
 1be:	df 92       	push	r13
 1c0:	cf 92       	push	r12
 1c2:	80 e0       	ldi	r24, 0x00	; 0
 1c4:	91 e0       	ldi	r25, 0x01	; 1
 1c6:	9f 93       	push	r25
 1c8:	8f 93       	push	r24
 1ca:	ce 01       	movw	r24, r28
 1cc:	01 96       	adiw	r24, 0x01	; 1
 1ce:	9f 93       	push	r25
 1d0:	8f 93       	push	r24
 1d2:	0e 94 7e 04 	call	0x8fc	; 0x8fc <sprintf>
 1d6:	0f b6       	in	r0, 0x3f	; 63
 1d8:	f8 94       	cli
 1da:	de bf       	out	0x3e, r29	; 62
 1dc:	0f be       	out	0x3f, r0	; 63
 1de:	cd bf       	out	0x3d, r28	; 61
 1e0:	2a c0       	rjmp	.+84     	; 0x236 <print_volt+0xde>
	}
	else if(decV < 100){  // decimal values of 0.0x
 1e2:	84 36       	cpi	r24, 0x64	; 100
 1e4:	91 05       	cpc	r25, r1
 1e6:	a4 f4       	brge	.+40     	; 0x210 <print_volt+0xb8>
		sprintf(number, "%u.0%u V", intV, decV);
 1e8:	7f 93       	push	r23
 1ea:	6f 93       	push	r22
 1ec:	df 92       	push	r13
 1ee:	cf 92       	push	r12
 1f0:	8a e0       	ldi	r24, 0x0A	; 10
 1f2:	91 e0       	ldi	r25, 0x01	; 1
 1f4:	9f 93       	push	r25
 1f6:	8f 93       	push	r24
 1f8:	ce 01       	movw	r24, r28
 1fa:	01 96       	adiw	r24, 0x01	; 1
 1fc:	9f 93       	push	r25
 1fe:	8f 93       	push	r24
 200:	0e 94 7e 04 	call	0x8fc	; 0x8fc <sprintf>
 204:	0f b6       	in	r0, 0x3f	; 63
 206:	f8 94       	cli
 208:	de bf       	out	0x3e, r29	; 62
 20a:	0f be       	out	0x3f, r0	; 63
 20c:	cd bf       	out	0x3d, r28	; 61
 20e:	13 c0       	rjmp	.+38     	; 0x236 <print_volt+0xde>
	}	// decimal values of 0.xx
	else sprintf(number, "%u.%u V", intV, decV);
 210:	7f 93       	push	r23
 212:	6f 93       	push	r22
 214:	df 92       	push	r13
 216:	cf 92       	push	r12
 218:	83 e1       	ldi	r24, 0x13	; 19
 21a:	91 e0       	ldi	r25, 0x01	; 1
 21c:	9f 93       	push	r25
 21e:	8f 93       	push	r24
 220:	ce 01       	movw	r24, r28
 222:	01 96       	adiw	r24, 0x01	; 1
 224:	9f 93       	push	r25
 226:	8f 93       	push	r24
 228:	0e 94 7e 04 	call	0x8fc	; 0x8fc <sprintf>
 22c:	0f b6       	in	r0, 0x3f	; 63
 22e:	f8 94       	cli
 230:	de bf       	out	0x3e, r29	; 62
 232:	0f be       	out	0x3f, r0	; 63
 234:	cd bf       	out	0x3d, r28	; 61
	
	lcd_str(number);									// print voltage
 236:	ce 01       	movw	r24, r28
 238:	01 96       	adiw	r24, 0x01	; 1
 23a:	0e 94 7b 00 	call	0xf6	; 0xf6 <lcd_str>
}
 23e:	60 96       	adiw	r28, 0x10	; 16
 240:	0f b6       	in	r0, 0x3f	; 63
 242:	f8 94       	cli
 244:	de bf       	out	0x3e, r29	; 62
 246:	0f be       	out	0x3f, r0	; 63
 248:	cd bf       	out	0x3d, r28	; 61
 24a:	df 91       	pop	r29
 24c:	cf 91       	pop	r28
 24e:	ff 90       	pop	r15
 250:	ef 90       	pop	r14
 252:	df 90       	pop	r13
 254:	cf 90       	pop	r12
 256:	bf 90       	pop	r11
 258:	af 90       	pop	r10
 25a:	9f 90       	pop	r9
 25c:	8f 90       	pop	r8
 25e:	08 95       	ret

00000260 <store_cust_chars>:
}

void store_cust_chars()
{
	// A CGRAM address: 0x00
	lcd_cmd(0x40);
 260:	80 e4       	ldi	r24, 0x40	; 64
 262:	0e 94 4b 00 	call	0x96	; 0x96 <lcd_cmd>
	lcd_data(0x03);
 266:	83 e0       	ldi	r24, 0x03	; 3
 268:	0e 94 69 00 	call	0xd2	; 0xd2 <lcd_data>
	lcd_data(0x07);
 26c:	87 e0       	ldi	r24, 0x07	; 7
 26e:	0e 94 69 00 	call	0xd2	; 0xd2 <lcd_data>
	lcd_data(0x0B);
 272:	8b e0       	ldi	r24, 0x0B	; 11
 274:	0e 94 69 00 	call	0xd2	; 0xd2 <lcd_data>
	lcd_data(0x13);
 278:	83 e1       	ldi	r24, 0x13	; 19
 27a:	0e 94 69 00 	call	0xd2	; 0xd2 <lcd_data>
	lcd_data(0x1F);
 27e:	8f e1       	ldi	r24, 0x1F	; 31
 280:	0e 94 69 00 	call	0xd2	; 0xd2 <lcd_data>
	lcd_data(0x13);
 284:	83 e1       	ldi	r24, 0x13	; 19
 286:	0e 94 69 00 	call	0xd2	; 0xd2 <lcd_data>
	lcd_data(0x13);
 28a:	83 e1       	ldi	r24, 0x13	; 19
 28c:	0e 94 69 00 	call	0xd2	; 0xd2 <lcd_data>
	lcd_data(0x00);
 290:	80 e0       	ldi	r24, 0x00	; 0
 292:	0e 94 69 00 	call	0xd2	; 0xd2 <lcd_data>
	
	// P 0x08
	lcd_cmd(0x48);
 296:	88 e4       	ldi	r24, 0x48	; 72
 298:	0e 94 4b 00 	call	0x96	; 0x96 <lcd_cmd>
	lcd_data(0x1E);
 29c:	8e e1       	ldi	r24, 0x1E	; 30
 29e:	0e 94 69 00 	call	0xd2	; 0xd2 <lcd_data>
	lcd_data(0x1B);
 2a2:	8b e1       	ldi	r24, 0x1B	; 27
 2a4:	0e 94 69 00 	call	0xd2	; 0xd2 <lcd_data>
	lcd_data(0x1B);
 2a8:	8b e1       	ldi	r24, 0x1B	; 27
 2aa:	0e 94 69 00 	call	0xd2	; 0xd2 <lcd_data>
	lcd_data(0x1E);
 2ae:	8e e1       	ldi	r24, 0x1E	; 30
 2b0:	0e 94 69 00 	call	0xd2	; 0xd2 <lcd_data>
	lcd_data(0x18);
 2b4:	88 e1       	ldi	r24, 0x18	; 24
 2b6:	0e 94 69 00 	call	0xd2	; 0xd2 <lcd_data>
	lcd_data(0x18);
 2ba:	88 e1       	ldi	r24, 0x18	; 24
 2bc:	0e 94 69 00 	call	0xd2	; 0xd2 <lcd_data>
	lcd_data(0x18);
 2c0:	88 e1       	ldi	r24, 0x18	; 24
 2c2:	0e 94 69 00 	call	0xd2	; 0xd2 <lcd_data>
	lcd_data(0x00);
 2c6:	80 e0       	ldi	r24, 0x00	; 0
 2c8:	0e 94 69 00 	call	0xd2	; 0xd2 <lcd_data>
	
	// E 0x10
	lcd_cmd(0x50);
 2cc:	80 e5       	ldi	r24, 0x50	; 80
 2ce:	0e 94 4b 00 	call	0x96	; 0x96 <lcd_cmd>
	lcd_data(0x1E);
 2d2:	8e e1       	ldi	r24, 0x1E	; 30
 2d4:	0e 94 69 00 	call	0xd2	; 0xd2 <lcd_data>
	lcd_data(0x18);
 2d8:	88 e1       	ldi	r24, 0x18	; 24
 2da:	0e 94 69 00 	call	0xd2	; 0xd2 <lcd_data>
	lcd_data(0x1E);
 2de:	8e e1       	ldi	r24, 0x1E	; 30
 2e0:	0e 94 69 00 	call	0xd2	; 0xd2 <lcd_data>
	lcd_data(0x18);
 2e4:	88 e1       	ldi	r24, 0x18	; 24
 2e6:	0e 94 69 00 	call	0xd2	; 0xd2 <lcd_data>
	lcd_data(0x18);
 2ea:	88 e1       	ldi	r24, 0x18	; 24
 2ec:	0e 94 69 00 	call	0xd2	; 0xd2 <lcd_data>
	lcd_data(0x1E);
 2f0:	8e e1       	ldi	r24, 0x1E	; 30
 2f2:	0e 94 69 00 	call	0xd2	; 0xd2 <lcd_data>
	lcd_data(0x1E);
 2f6:	8e e1       	ldi	r24, 0x1E	; 30
 2f8:	0e 94 69 00 	call	0xd2	; 0xd2 <lcd_data>
	lcd_data(0x00);
 2fc:	80 e0       	ldi	r24, 0x00	; 0
 2fe:	0e 94 69 00 	call	0xd2	; 0xd2 <lcd_data>
	
	// L 0x18
	lcd_cmd(0x58);
 302:	88 e5       	ldi	r24, 0x58	; 88
 304:	0e 94 4b 00 	call	0x96	; 0x96 <lcd_cmd>
	lcd_data(0x10);
 308:	80 e1       	ldi	r24, 0x10	; 16
 30a:	0e 94 69 00 	call	0xd2	; 0xd2 <lcd_data>
	lcd_data(0x10);
 30e:	80 e1       	ldi	r24, 0x10	; 16
 310:	0e 94 69 00 	call	0xd2	; 0xd2 <lcd_data>
	lcd_data(0x10);
 314:	80 e1       	ldi	r24, 0x10	; 16
 316:	0e 94 69 00 	call	0xd2	; 0xd2 <lcd_data>
	lcd_data(0x10);
 31a:	80 e1       	ldi	r24, 0x10	; 16
 31c:	0e 94 69 00 	call	0xd2	; 0xd2 <lcd_data>
	lcd_data(0x10);
 320:	80 e1       	ldi	r24, 0x10	; 16
 322:	0e 94 69 00 	call	0xd2	; 0xd2 <lcd_data>
	lcd_data(0x1E);
 326:	8e e1       	ldi	r24, 0x1E	; 30
 328:	0e 94 69 00 	call	0xd2	; 0xd2 <lcd_data>
	lcd_data(0x1E);
 32c:	8e e1       	ldi	r24, 0x1E	; 30
 32e:	0e 94 69 00 	call	0xd2	; 0xd2 <lcd_data>
	lcd_data(0x00);
 332:	80 e0       	ldi	r24, 0x00	; 0
 334:	0e 94 69 00 	call	0xd2	; 0xd2 <lcd_data>
 338:	08 95       	ret

0000033a <print_APEL>:
}

void print_APEL()
{
	lcd_cmd(0X81);		// set position [1,2]
 33a:	81 e8       	ldi	r24, 0x81	; 129
 33c:	0e 94 4b 00 	call	0x96	; 0x96 <lcd_cmd>
	lcd_data(0x00);		// A
 340:	80 e0       	ldi	r24, 0x00	; 0
 342:	0e 94 69 00 	call	0xd2	; 0xd2 <lcd_data>
	lcd_data(0x2E);		// .
 346:	8e e2       	ldi	r24, 0x2E	; 46
 348:	0e 94 69 00 	call	0xd2	; 0xd2 <lcd_data>
	lcd_data(0x01);		// P
 34c:	81 e0       	ldi	r24, 0x01	; 1
 34e:	0e 94 69 00 	call	0xd2	; 0xd2 <lcd_data>
	lcd_data(0x2E);		// .
 352:	8e e2       	ldi	r24, 0x2E	; 46
 354:	0e 94 69 00 	call	0xd2	; 0xd2 <lcd_data>
	lcd_data(0x02);		// E
 358:	82 e0       	ldi	r24, 0x02	; 2
 35a:	0e 94 69 00 	call	0xd2	; 0xd2 <lcd_data>
	lcd_data(0x2E);		// .
 35e:	8e e2       	ldi	r24, 0x2E	; 46
 360:	0e 94 69 00 	call	0xd2	; 0xd2 <lcd_data>
	lcd_data(0x03);		// L
 364:	83 e0       	ldi	r24, 0x03	; 3
 366:	0e 94 69 00 	call	0xd2	; 0xd2 <lcd_data>
	lcd_str(". Scan");	
 36a:	8b e1       	ldi	r24, 0x1B	; 27
 36c:	91 e0       	ldi	r25, 0x01	; 1
 36e:	0e 94 7b 00 	call	0xf6	; 0xf6 <lcd_str>
 372:	08 95       	ret

00000374 <welcome_screen>:
	lcd_str(number);									// print voltage
}

void welcome_screen()
{
	print_APEL();
 374:	0e 94 9d 01 	call	0x33a	; 0x33a <print_APEL>
	lcd_cmd(0xC3);					// set position [2,4]
 378:	83 ec       	ldi	r24, 0xC3	; 195
 37a:	0e 94 4b 00 	call	0x96	; 0x96 <lcd_cmd>
	lcd_str("UNLV  2017");
 37e:	82 e2       	ldi	r24, 0x22	; 34
 380:	91 e0       	ldi	r25, 0x01	; 1
 382:	0e 94 7b 00 	call	0xf6	; 0xf6 <lcd_str>
 386:	83 ec       	ldi	r24, 0xC3	; 195
 388:	99 e0       	ldi	r25, 0x09	; 9
 38a:	01 97       	sbiw	r24, 0x01	; 1
 38c:	f1 f7       	brne	.-4      	; 0x38a <welcome_screen+0x16>
 38e:	00 c0       	rjmp	.+0      	; 0x390 <welcome_screen+0x1c>
 390:	00 00       	nop
 392:	08 95       	ret

00000394 <main>:
	int Vread = 0;				// for reading voltages during test
	float bias;					// for displaying bias voltage as decimal
	float peak = 0.0;			// for storing peak voltage as decimal
	int state = 0;				// for storing the operating state based on button pushed
	
	DDRB = 0XFF;		// Port B: data register for LCD - set to output
 394:	8f ef       	ldi	r24, 0xFF	; 255
 396:	84 b9       	out	0x04, r24	; 4
	DDRD = 0XF8;		// Port D: PD0:2 push button input, PD3:5 LCD commands output
 398:	88 ef       	ldi	r24, 0xF8	; 248
 39a:	8a b9       	out	0x0a, r24	; 10
	
	lcd_init();
 39c:	0e 94 5c 00 	call	0xb8	; 0xb8 <lcd_init>
	store_cust_chars();
 3a0:	0e 94 30 01 	call	0x260	; 0x260 <store_cust_chars>
	welcome_screen();
 3a4:	0e 94 ba 01 	call	0x374	; 0x374 <welcome_screen>
{
	int peakVoltage = 0;		// for holding peak voltage from test
	int Vread = 0;				// for reading voltages during test
	float bias;					// for displaying bias voltage as decimal
	float peak = 0.0;			// for storing peak voltage as decimal
	int state = 0;				// for storing the operating state based on button pushed
 3a8:	80 e0       	ldi	r24, 0x00	; 0
 3aa:	90 e0       	ldi	r25, 0x00	; 0
void welcome_screen();					// prints start up welcome message
void store_cust_chars();				// load custom characters into CGRAM on LCD

int main()
{
	int peakVoltage = 0;		// for holding peak voltage from test
 3ac:	c0 e0       	ldi	r28, 0x00	; 0
 3ae:	d0 e0       	ldi	r29, 0x00	; 0
 3b0:	cc 24       	eor	r12, r12
 3b2:	c3 94       	inc	r12
 3b4:	d1 2c       	mov	r13, r1
				Vread = read_adc(1);
				// read and convert ADC channel 6 with 6:1 voltage divider
				bias = (float)(Vread * 5.0 * ((498.1+101.8)/101.8) / 1023.0);	
				lcd_cmd(0xc0);				// set position [2,1]
				print_volt(bias);
			break;
 3b6:	0f 2e       	mov	r0, r31
 3b8:	f3 e0       	ldi	r31, 0x03	; 3
 3ba:	ef 2e       	mov	r14, r31
 3bc:	f0 2d       	mov	r31, r0
 3be:	f1 2c       	mov	r15, r1
			lcd_cmd(0xC3);					// set position [2,4]
			lcd_str("Running...");
		}
		else if ((PIND & 0x02) == 0x02)		// STOP button pushed
		{
			state = 2;
 3c0:	68 94       	set
 3c2:	88 24       	eor	r8, r8
 3c4:	81 f8       	bld	r8, 1
 3c6:	91 2c       	mov	r9, r1
		
		if((PIND & 0x01) == 0x01)			// START button pushed
		{
			adc_initBG();
			state = 1;
			peakVoltage = 0;
 3c8:	a1 2c       	mov	r10, r1
 3ca:	b1 2c       	mov	r11, r1
			STATE 1: Start mode - run test to capture peak DC voltage level
			STATE 2: Stop mode - stop test and display peak voltage level
			STATE 3: Read bias mode - display the DC bias across the SiPM
		*/
		
		if((PIND & 0x01) == 0x01)			// START button pushed
 3cc:	48 9b       	sbis	0x09, 0	; 9
 3ce:	14 c0       	rjmp	.+40     	; 0x3f8 <main+0x64>
		{
			adc_initBG();
 3d0:	0e 94 91 00 	call	0x122	; 0x122 <adc_initBG>
			state = 1;
			peakVoltage = 0;
			lcd_init();
 3d4:	0e 94 5c 00 	call	0xb8	; 0xb8 <lcd_init>
			print_APEL();
 3d8:	0e 94 9d 01 	call	0x33a	; 0x33a <print_APEL>
			lcd_str(". Scan");
 3dc:	8b e1       	ldi	r24, 0x1B	; 27
 3de:	91 e0       	ldi	r25, 0x01	; 1
 3e0:	0e 94 7b 00 	call	0xf6	; 0xf6 <lcd_str>
			lcd_cmd(0xC3);					// set position [2,4]
 3e4:	83 ec       	ldi	r24, 0xC3	; 195
 3e6:	0e 94 4b 00 	call	0x96	; 0x96 <lcd_cmd>
			lcd_str("Running...");
 3ea:	8d e2       	ldi	r24, 0x2D	; 45
 3ec:	91 e0       	ldi	r25, 0x01	; 1
 3ee:	0e 94 7b 00 	call	0xf6	; 0xf6 <lcd_str>
		
		if((PIND & 0x01) == 0x01)			// START button pushed
		{
			adc_initBG();
			state = 1;
			peakVoltage = 0;
 3f2:	ca 2d       	mov	r28, r10
 3f4:	db 2d       	mov	r29, r11
 3f6:	44 c0       	rjmp	.+136    	; 0x480 <__LOCK_REGION_LENGTH__+0x80>
			print_APEL();
			lcd_str(". Scan");
			lcd_cmd(0xC3);					// set position [2,4]
			lcd_str("Running...");
		}
		else if ((PIND & 0x02) == 0x02)		// STOP button pushed
 3f8:	49 9b       	sbis	0x09, 1	; 9
 3fa:	2a c0       	rjmp	.+84     	; 0x450 <__LOCK_REGION_LENGTH__+0x50>
		{
			state = 2;
			lcd_init();
 3fc:	0e 94 5c 00 	call	0xb8	; 0xb8 <lcd_init>
			lcd_cmd(0x82);					// set position [1,3]
 400:	82 e8       	ldi	r24, 0x82	; 130
 402:	0e 94 4b 00 	call	0x96	; 0x96 <lcd_cmd>
			lcd_str("Peak Voltage");
 406:	88 e3       	ldi	r24, 0x38	; 56
 408:	91 e0       	ldi	r25, 0x01	; 1
 40a:	0e 94 7b 00 	call	0xf6	; 0xf6 <lcd_str>
			// convert 10-bit binary voltage value to decimal referenced to 1.1V with 1/6 divider at input
			peak = (float)(peakVoltage * 1.1 * ((495.2+101.65)/101.65) / 1023.0);  
			lcd_cmd(0xC0);					// set position [2,1];
 40e:	80 ec       	ldi	r24, 0xC0	; 192
 410:	0e 94 4b 00 	call	0x96	; 0x96 <lcd_cmd>
			state = 2;
			lcd_init();
			lcd_cmd(0x82);					// set position [1,3]
			lcd_str("Peak Voltage");
			// convert 10-bit binary voltage value to decimal referenced to 1.1V with 1/6 divider at input
			peak = (float)(peakVoltage * 1.1 * ((495.2+101.65)/101.65) / 1023.0);  
 414:	be 01       	movw	r22, r28
 416:	0d 2e       	mov	r0, r29
 418:	00 0c       	add	r0, r0
 41a:	88 0b       	sbc	r24, r24
 41c:	99 0b       	sbc	r25, r25
 41e:	0e 94 85 03 	call	0x70a	; 0x70a <__floatsisf>
 422:	2d ec       	ldi	r18, 0xCD	; 205
 424:	3c ec       	ldi	r19, 0xCC	; 204
 426:	4c e8       	ldi	r20, 0x8C	; 140
 428:	5f e3       	ldi	r21, 0x3F	; 63
 42a:	0e 94 11 04 	call	0x822	; 0x822 <__mulsf3>
 42e:	2d e4       	ldi	r18, 0x4D	; 77
 430:	34 ee       	ldi	r19, 0xE4	; 228
 432:	4b eb       	ldi	r20, 0xBB	; 187
 434:	50 e4       	ldi	r21, 0x40	; 64
 436:	0e 94 11 04 	call	0x822	; 0x822 <__mulsf3>
 43a:	20 e0       	ldi	r18, 0x00	; 0
 43c:	30 ec       	ldi	r19, 0xC0	; 192
 43e:	4f e7       	ldi	r20, 0x7F	; 127
 440:	54 e4       	ldi	r21, 0x44	; 68
 442:	0e 94 db 02 	call	0x5b6	; 0x5b6 <__divsf3>
			lcd_cmd(0xC0);					// set position [2,1];
			print_volt(peak);
 446:	0e 94 ac 00 	call	0x158	; 0x158 <print_volt>
			lcd_cmd(0xC3);					// set position [2,4]
			lcd_str("Running...");
		}
		else if ((PIND & 0x02) == 0x02)		// STOP button pushed
		{
			state = 2;
 44a:	88 2d       	mov	r24, r8
 44c:	99 2d       	mov	r25, r9
 44e:	be cf       	rjmp	.-132    	; 0x3cc <main+0x38>
			// convert 10-bit binary voltage value to decimal referenced to 1.1V with 1/6 divider at input
			peak = (float)(peakVoltage * 1.1 * ((495.2+101.65)/101.65) / 1023.0);  
			lcd_cmd(0xC0);					// set position [2,1];
			print_volt(peak);
		}
		else if ((PIND & 0x04) == 0x04)		// READ BIAS button pushed
 450:	4a 9b       	sbis	0x09, 2	; 9
 452:	0f c0       	rjmp	.+30     	; 0x472 <__LOCK_REGION_LENGTH__+0x72>
		{
			adc_init();
 454:	0e 94 8a 00 	call	0x114	; 0x114 <adc_init>
			state = 3;
			lcd_init();
 458:	0e 94 5c 00 	call	0xb8	; 0xb8 <lcd_init>
			lcd_cmd(0x83);					// set position [1,4]
 45c:	83 e8       	ldi	r24, 0x83	; 131
 45e:	0e 94 4b 00 	call	0x96	; 0x96 <lcd_cmd>
			lcd_str("SiPM Bias");
 462:	85 e4       	ldi	r24, 0x45	; 69
 464:	91 e0       	ldi	r25, 0x01	; 1
 466:	0e 94 7b 00 	call	0xf6	; 0xf6 <lcd_str>
			lcd_cmd(0xC2);					// set position [2,3]
 46a:	82 ec       	ldi	r24, 0xC2	; 194
 46c:	0e 94 4b 00 	call	0x96	; 0x96 <lcd_cmd>
 470:	11 c0       	rjmp	.+34     	; 0x494 <__LOCK_REGION_LENGTH__+0x94>
		}
			
		switch(state)
 472:	81 30       	cpi	r24, 0x01	; 1
 474:	91 05       	cpc	r25, r1
 476:	21 f0       	breq	.+8      	; 0x480 <__LOCK_REGION_LENGTH__+0x80>
 478:	83 30       	cpi	r24, 0x03	; 3
 47a:	91 05       	cpc	r25, r1
 47c:	59 f0       	breq	.+22     	; 0x494 <__LOCK_REGION_LENGTH__+0x94>
 47e:	a6 cf       	rjmp	.-180    	; 0x3cc <main+0x38>
		{
			case 1 :	// check for and capture peak voltage level
				Vread = read_adc(7);
 480:	87 e0       	ldi	r24, 0x07	; 7
 482:	0e 94 98 00 	call	0x130	; 0x130 <read_adc>
 486:	c8 17       	cp	r28, r24
 488:	d9 07       	cpc	r29, r25
 48a:	0c f4       	brge	.+2      	; 0x48e <__LOCK_REGION_LENGTH__+0x8e>
 48c:	ec 01       	movw	r28, r24
 48e:	8c 2d       	mov	r24, r12
 490:	9d 2d       	mov	r25, r13
 492:	9c cf       	rjmp	.-200    	; 0x3cc <main+0x38>
				if(Vread > peakVoltage) peakVoltage = Vread;
			break;
			
			case 3 :	// display bias voltage
				Vread = read_adc(1);
 494:	81 e0       	ldi	r24, 0x01	; 1
 496:	0e 94 98 00 	call	0x130	; 0x130 <read_adc>
 49a:	8c 01       	movw	r16, r24
				// read and convert ADC channel 6 with 6:1 voltage divider
				bias = (float)(Vread * 5.0 * ((498.1+101.8)/101.8) / 1023.0);	
				lcd_cmd(0xc0);				// set position [2,1]
 49c:	80 ec       	ldi	r24, 0xC0	; 192
 49e:	0e 94 4b 00 	call	0x96	; 0x96 <lcd_cmd>
			break;
			
			case 3 :	// display bias voltage
				Vread = read_adc(1);
				// read and convert ADC channel 6 with 6:1 voltage divider
				bias = (float)(Vread * 5.0 * ((498.1+101.8)/101.8) / 1023.0);	
 4a2:	b8 01       	movw	r22, r16
 4a4:	11 0f       	add	r17, r17
 4a6:	88 0b       	sbc	r24, r24
 4a8:	99 0b       	sbc	r25, r25
 4aa:	0e 94 85 03 	call	0x70a	; 0x70a <__floatsisf>
 4ae:	20 e0       	ldi	r18, 0x00	; 0
 4b0:	30 e0       	ldi	r19, 0x00	; 0
 4b2:	40 ea       	ldi	r20, 0xA0	; 160
 4b4:	50 e4       	ldi	r21, 0x40	; 64
 4b6:	0e 94 11 04 	call	0x822	; 0x822 <__mulsf3>
 4ba:	2c ed       	ldi	r18, 0xDC	; 220
 4bc:	32 e9       	ldi	r19, 0x92	; 146
 4be:	4c eb       	ldi	r20, 0xBC	; 188
 4c0:	50 e4       	ldi	r21, 0x40	; 64
 4c2:	0e 94 11 04 	call	0x822	; 0x822 <__mulsf3>
 4c6:	20 e0       	ldi	r18, 0x00	; 0
 4c8:	30 ec       	ldi	r19, 0xC0	; 192
 4ca:	4f e7       	ldi	r20, 0x7F	; 127
 4cc:	54 e4       	ldi	r21, 0x44	; 68
 4ce:	0e 94 db 02 	call	0x5b6	; 0x5b6 <__divsf3>
				lcd_cmd(0xc0);				// set position [2,1]
				print_volt(bias);
 4d2:	0e 94 ac 00 	call	0x158	; 0x158 <print_volt>
			break;
 4d6:	8e 2d       	mov	r24, r14
 4d8:	9f 2d       	mov	r25, r15
 4da:	78 cf       	rjmp	.-272    	; 0x3cc <main+0x38>

000004dc <__subsf3>:
 4dc:	50 58       	subi	r21, 0x80	; 128

000004de <__addsf3>:
 4de:	bb 27       	eor	r27, r27
 4e0:	aa 27       	eor	r26, r26
 4e2:	0e 94 86 02 	call	0x50c	; 0x50c <__addsf3x>
 4e6:	0c 94 d7 03 	jmp	0x7ae	; 0x7ae <__fp_round>
 4ea:	0e 94 c9 03 	call	0x792	; 0x792 <__fp_pscA>
 4ee:	38 f0       	brcs	.+14     	; 0x4fe <__addsf3+0x20>
 4f0:	0e 94 d0 03 	call	0x7a0	; 0x7a0 <__fp_pscB>
 4f4:	20 f0       	brcs	.+8      	; 0x4fe <__addsf3+0x20>
 4f6:	39 f4       	brne	.+14     	; 0x506 <__addsf3+0x28>
 4f8:	9f 3f       	cpi	r25, 0xFF	; 255
 4fa:	19 f4       	brne	.+6      	; 0x502 <__addsf3+0x24>
 4fc:	26 f4       	brtc	.+8      	; 0x506 <__addsf3+0x28>
 4fe:	0c 94 c6 03 	jmp	0x78c	; 0x78c <__fp_nan>
 502:	0e f4       	brtc	.+2      	; 0x506 <__addsf3+0x28>
 504:	e0 95       	com	r30
 506:	e7 fb       	bst	r30, 7
 508:	0c 94 c0 03 	jmp	0x780	; 0x780 <__fp_inf>

0000050c <__addsf3x>:
 50c:	e9 2f       	mov	r30, r25
 50e:	0e 94 e8 03 	call	0x7d0	; 0x7d0 <__fp_split3>
 512:	58 f3       	brcs	.-42     	; 0x4ea <__addsf3+0xc>
 514:	ba 17       	cp	r27, r26
 516:	62 07       	cpc	r22, r18
 518:	73 07       	cpc	r23, r19
 51a:	84 07       	cpc	r24, r20
 51c:	95 07       	cpc	r25, r21
 51e:	20 f0       	brcs	.+8      	; 0x528 <__addsf3x+0x1c>
 520:	79 f4       	brne	.+30     	; 0x540 <__addsf3x+0x34>
 522:	a6 f5       	brtc	.+104    	; 0x58c <__addsf3x+0x80>
 524:	0c 94 0a 04 	jmp	0x814	; 0x814 <__fp_zero>
 528:	0e f4       	brtc	.+2      	; 0x52c <__addsf3x+0x20>
 52a:	e0 95       	com	r30
 52c:	0b 2e       	mov	r0, r27
 52e:	ba 2f       	mov	r27, r26
 530:	a0 2d       	mov	r26, r0
 532:	0b 01       	movw	r0, r22
 534:	b9 01       	movw	r22, r18
 536:	90 01       	movw	r18, r0
 538:	0c 01       	movw	r0, r24
 53a:	ca 01       	movw	r24, r20
 53c:	a0 01       	movw	r20, r0
 53e:	11 24       	eor	r1, r1
 540:	ff 27       	eor	r31, r31
 542:	59 1b       	sub	r21, r25
 544:	99 f0       	breq	.+38     	; 0x56c <__addsf3x+0x60>
 546:	59 3f       	cpi	r21, 0xF9	; 249
 548:	50 f4       	brcc	.+20     	; 0x55e <__addsf3x+0x52>
 54a:	50 3e       	cpi	r21, 0xE0	; 224
 54c:	68 f1       	brcs	.+90     	; 0x5a8 <__addsf3x+0x9c>
 54e:	1a 16       	cp	r1, r26
 550:	f0 40       	sbci	r31, 0x00	; 0
 552:	a2 2f       	mov	r26, r18
 554:	23 2f       	mov	r18, r19
 556:	34 2f       	mov	r19, r20
 558:	44 27       	eor	r20, r20
 55a:	58 5f       	subi	r21, 0xF8	; 248
 55c:	f3 cf       	rjmp	.-26     	; 0x544 <__addsf3x+0x38>
 55e:	46 95       	lsr	r20
 560:	37 95       	ror	r19
 562:	27 95       	ror	r18
 564:	a7 95       	ror	r26
 566:	f0 40       	sbci	r31, 0x00	; 0
 568:	53 95       	inc	r21
 56a:	c9 f7       	brne	.-14     	; 0x55e <__addsf3x+0x52>
 56c:	7e f4       	brtc	.+30     	; 0x58c <__addsf3x+0x80>
 56e:	1f 16       	cp	r1, r31
 570:	ba 0b       	sbc	r27, r26
 572:	62 0b       	sbc	r22, r18
 574:	73 0b       	sbc	r23, r19
 576:	84 0b       	sbc	r24, r20
 578:	ba f0       	brmi	.+46     	; 0x5a8 <__addsf3x+0x9c>
 57a:	91 50       	subi	r25, 0x01	; 1
 57c:	a1 f0       	breq	.+40     	; 0x5a6 <__addsf3x+0x9a>
 57e:	ff 0f       	add	r31, r31
 580:	bb 1f       	adc	r27, r27
 582:	66 1f       	adc	r22, r22
 584:	77 1f       	adc	r23, r23
 586:	88 1f       	adc	r24, r24
 588:	c2 f7       	brpl	.-16     	; 0x57a <__addsf3x+0x6e>
 58a:	0e c0       	rjmp	.+28     	; 0x5a8 <__addsf3x+0x9c>
 58c:	ba 0f       	add	r27, r26
 58e:	62 1f       	adc	r22, r18
 590:	73 1f       	adc	r23, r19
 592:	84 1f       	adc	r24, r20
 594:	48 f4       	brcc	.+18     	; 0x5a8 <__addsf3x+0x9c>
 596:	87 95       	ror	r24
 598:	77 95       	ror	r23
 59a:	67 95       	ror	r22
 59c:	b7 95       	ror	r27
 59e:	f7 95       	ror	r31
 5a0:	9e 3f       	cpi	r25, 0xFE	; 254
 5a2:	08 f0       	brcs	.+2      	; 0x5a6 <__addsf3x+0x9a>
 5a4:	b0 cf       	rjmp	.-160    	; 0x506 <__addsf3+0x28>
 5a6:	93 95       	inc	r25
 5a8:	88 0f       	add	r24, r24
 5aa:	08 f0       	brcs	.+2      	; 0x5ae <__addsf3x+0xa2>
 5ac:	99 27       	eor	r25, r25
 5ae:	ee 0f       	add	r30, r30
 5b0:	97 95       	ror	r25
 5b2:	87 95       	ror	r24
 5b4:	08 95       	ret

000005b6 <__divsf3>:
 5b6:	0e 94 ef 02 	call	0x5de	; 0x5de <__divsf3x>
 5ba:	0c 94 d7 03 	jmp	0x7ae	; 0x7ae <__fp_round>
 5be:	0e 94 d0 03 	call	0x7a0	; 0x7a0 <__fp_pscB>
 5c2:	58 f0       	brcs	.+22     	; 0x5da <__divsf3+0x24>
 5c4:	0e 94 c9 03 	call	0x792	; 0x792 <__fp_pscA>
 5c8:	40 f0       	brcs	.+16     	; 0x5da <__divsf3+0x24>
 5ca:	29 f4       	brne	.+10     	; 0x5d6 <__divsf3+0x20>
 5cc:	5f 3f       	cpi	r21, 0xFF	; 255
 5ce:	29 f0       	breq	.+10     	; 0x5da <__divsf3+0x24>
 5d0:	0c 94 c0 03 	jmp	0x780	; 0x780 <__fp_inf>
 5d4:	51 11       	cpse	r21, r1
 5d6:	0c 94 0b 04 	jmp	0x816	; 0x816 <__fp_szero>
 5da:	0c 94 c6 03 	jmp	0x78c	; 0x78c <__fp_nan>

000005de <__divsf3x>:
 5de:	0e 94 e8 03 	call	0x7d0	; 0x7d0 <__fp_split3>
 5e2:	68 f3       	brcs	.-38     	; 0x5be <__divsf3+0x8>

000005e4 <__divsf3_pse>:
 5e4:	99 23       	and	r25, r25
 5e6:	b1 f3       	breq	.-20     	; 0x5d4 <__divsf3+0x1e>
 5e8:	55 23       	and	r21, r21
 5ea:	91 f3       	breq	.-28     	; 0x5d0 <__divsf3+0x1a>
 5ec:	95 1b       	sub	r25, r21
 5ee:	55 0b       	sbc	r21, r21
 5f0:	bb 27       	eor	r27, r27
 5f2:	aa 27       	eor	r26, r26
 5f4:	62 17       	cp	r22, r18
 5f6:	73 07       	cpc	r23, r19
 5f8:	84 07       	cpc	r24, r20
 5fa:	38 f0       	brcs	.+14     	; 0x60a <__divsf3_pse+0x26>
 5fc:	9f 5f       	subi	r25, 0xFF	; 255
 5fe:	5f 4f       	sbci	r21, 0xFF	; 255
 600:	22 0f       	add	r18, r18
 602:	33 1f       	adc	r19, r19
 604:	44 1f       	adc	r20, r20
 606:	aa 1f       	adc	r26, r26
 608:	a9 f3       	breq	.-22     	; 0x5f4 <__divsf3_pse+0x10>
 60a:	35 d0       	rcall	.+106    	; 0x676 <__divsf3_pse+0x92>
 60c:	0e 2e       	mov	r0, r30
 60e:	3a f0       	brmi	.+14     	; 0x61e <__divsf3_pse+0x3a>
 610:	e0 e8       	ldi	r30, 0x80	; 128
 612:	32 d0       	rcall	.+100    	; 0x678 <__divsf3_pse+0x94>
 614:	91 50       	subi	r25, 0x01	; 1
 616:	50 40       	sbci	r21, 0x00	; 0
 618:	e6 95       	lsr	r30
 61a:	00 1c       	adc	r0, r0
 61c:	ca f7       	brpl	.-14     	; 0x610 <__divsf3_pse+0x2c>
 61e:	2b d0       	rcall	.+86     	; 0x676 <__divsf3_pse+0x92>
 620:	fe 2f       	mov	r31, r30
 622:	29 d0       	rcall	.+82     	; 0x676 <__divsf3_pse+0x92>
 624:	66 0f       	add	r22, r22
 626:	77 1f       	adc	r23, r23
 628:	88 1f       	adc	r24, r24
 62a:	bb 1f       	adc	r27, r27
 62c:	26 17       	cp	r18, r22
 62e:	37 07       	cpc	r19, r23
 630:	48 07       	cpc	r20, r24
 632:	ab 07       	cpc	r26, r27
 634:	b0 e8       	ldi	r27, 0x80	; 128
 636:	09 f0       	breq	.+2      	; 0x63a <__divsf3_pse+0x56>
 638:	bb 0b       	sbc	r27, r27
 63a:	80 2d       	mov	r24, r0
 63c:	bf 01       	movw	r22, r30
 63e:	ff 27       	eor	r31, r31
 640:	93 58       	subi	r25, 0x83	; 131
 642:	5f 4f       	sbci	r21, 0xFF	; 255
 644:	3a f0       	brmi	.+14     	; 0x654 <__divsf3_pse+0x70>
 646:	9e 3f       	cpi	r25, 0xFE	; 254
 648:	51 05       	cpc	r21, r1
 64a:	78 f0       	brcs	.+30     	; 0x66a <__divsf3_pse+0x86>
 64c:	0c 94 c0 03 	jmp	0x780	; 0x780 <__fp_inf>
 650:	0c 94 0b 04 	jmp	0x816	; 0x816 <__fp_szero>
 654:	5f 3f       	cpi	r21, 0xFF	; 255
 656:	e4 f3       	brlt	.-8      	; 0x650 <__divsf3_pse+0x6c>
 658:	98 3e       	cpi	r25, 0xE8	; 232
 65a:	d4 f3       	brlt	.-12     	; 0x650 <__divsf3_pse+0x6c>
 65c:	86 95       	lsr	r24
 65e:	77 95       	ror	r23
 660:	67 95       	ror	r22
 662:	b7 95       	ror	r27
 664:	f7 95       	ror	r31
 666:	9f 5f       	subi	r25, 0xFF	; 255
 668:	c9 f7       	brne	.-14     	; 0x65c <__divsf3_pse+0x78>
 66a:	88 0f       	add	r24, r24
 66c:	91 1d       	adc	r25, r1
 66e:	96 95       	lsr	r25
 670:	87 95       	ror	r24
 672:	97 f9       	bld	r25, 7
 674:	08 95       	ret
 676:	e1 e0       	ldi	r30, 0x01	; 1
 678:	66 0f       	add	r22, r22
 67a:	77 1f       	adc	r23, r23
 67c:	88 1f       	adc	r24, r24
 67e:	bb 1f       	adc	r27, r27
 680:	62 17       	cp	r22, r18
 682:	73 07       	cpc	r23, r19
 684:	84 07       	cpc	r24, r20
 686:	ba 07       	cpc	r27, r26
 688:	20 f0       	brcs	.+8      	; 0x692 <__divsf3_pse+0xae>
 68a:	62 1b       	sub	r22, r18
 68c:	73 0b       	sbc	r23, r19
 68e:	84 0b       	sbc	r24, r20
 690:	ba 0b       	sbc	r27, r26
 692:	ee 1f       	adc	r30, r30
 694:	88 f7       	brcc	.-30     	; 0x678 <__divsf3_pse+0x94>
 696:	e0 95       	com	r30
 698:	08 95       	ret

0000069a <__fixsfsi>:
 69a:	0e 94 54 03 	call	0x6a8	; 0x6a8 <__fixunssfsi>
 69e:	68 94       	set
 6a0:	b1 11       	cpse	r27, r1
 6a2:	0c 94 0b 04 	jmp	0x816	; 0x816 <__fp_szero>
 6a6:	08 95       	ret

000006a8 <__fixunssfsi>:
 6a8:	0e 94 f0 03 	call	0x7e0	; 0x7e0 <__fp_splitA>
 6ac:	88 f0       	brcs	.+34     	; 0x6d0 <__fixunssfsi+0x28>
 6ae:	9f 57       	subi	r25, 0x7F	; 127
 6b0:	98 f0       	brcs	.+38     	; 0x6d8 <__fixunssfsi+0x30>
 6b2:	b9 2f       	mov	r27, r25
 6b4:	99 27       	eor	r25, r25
 6b6:	b7 51       	subi	r27, 0x17	; 23
 6b8:	b0 f0       	brcs	.+44     	; 0x6e6 <__fixunssfsi+0x3e>
 6ba:	e1 f0       	breq	.+56     	; 0x6f4 <__fixunssfsi+0x4c>
 6bc:	66 0f       	add	r22, r22
 6be:	77 1f       	adc	r23, r23
 6c0:	88 1f       	adc	r24, r24
 6c2:	99 1f       	adc	r25, r25
 6c4:	1a f0       	brmi	.+6      	; 0x6cc <__fixunssfsi+0x24>
 6c6:	ba 95       	dec	r27
 6c8:	c9 f7       	brne	.-14     	; 0x6bc <__fixunssfsi+0x14>
 6ca:	14 c0       	rjmp	.+40     	; 0x6f4 <__fixunssfsi+0x4c>
 6cc:	b1 30       	cpi	r27, 0x01	; 1
 6ce:	91 f0       	breq	.+36     	; 0x6f4 <__fixunssfsi+0x4c>
 6d0:	0e 94 0a 04 	call	0x814	; 0x814 <__fp_zero>
 6d4:	b1 e0       	ldi	r27, 0x01	; 1
 6d6:	08 95       	ret
 6d8:	0c 94 0a 04 	jmp	0x814	; 0x814 <__fp_zero>
 6dc:	67 2f       	mov	r22, r23
 6de:	78 2f       	mov	r23, r24
 6e0:	88 27       	eor	r24, r24
 6e2:	b8 5f       	subi	r27, 0xF8	; 248
 6e4:	39 f0       	breq	.+14     	; 0x6f4 <__fixunssfsi+0x4c>
 6e6:	b9 3f       	cpi	r27, 0xF9	; 249
 6e8:	cc f3       	brlt	.-14     	; 0x6dc <__fixunssfsi+0x34>
 6ea:	86 95       	lsr	r24
 6ec:	77 95       	ror	r23
 6ee:	67 95       	ror	r22
 6f0:	b3 95       	inc	r27
 6f2:	d9 f7       	brne	.-10     	; 0x6ea <__fixunssfsi+0x42>
 6f4:	3e f4       	brtc	.+14     	; 0x704 <__fixunssfsi+0x5c>
 6f6:	90 95       	com	r25
 6f8:	80 95       	com	r24
 6fa:	70 95       	com	r23
 6fc:	61 95       	neg	r22
 6fe:	7f 4f       	sbci	r23, 0xFF	; 255
 700:	8f 4f       	sbci	r24, 0xFF	; 255
 702:	9f 4f       	sbci	r25, 0xFF	; 255
 704:	08 95       	ret

00000706 <__floatunsisf>:
 706:	e8 94       	clt
 708:	09 c0       	rjmp	.+18     	; 0x71c <__floatsisf+0x12>

0000070a <__floatsisf>:
 70a:	97 fb       	bst	r25, 7
 70c:	3e f4       	brtc	.+14     	; 0x71c <__floatsisf+0x12>
 70e:	90 95       	com	r25
 710:	80 95       	com	r24
 712:	70 95       	com	r23
 714:	61 95       	neg	r22
 716:	7f 4f       	sbci	r23, 0xFF	; 255
 718:	8f 4f       	sbci	r24, 0xFF	; 255
 71a:	9f 4f       	sbci	r25, 0xFF	; 255
 71c:	99 23       	and	r25, r25
 71e:	a9 f0       	breq	.+42     	; 0x74a <__floatsisf+0x40>
 720:	f9 2f       	mov	r31, r25
 722:	96 e9       	ldi	r25, 0x96	; 150
 724:	bb 27       	eor	r27, r27
 726:	93 95       	inc	r25
 728:	f6 95       	lsr	r31
 72a:	87 95       	ror	r24
 72c:	77 95       	ror	r23
 72e:	67 95       	ror	r22
 730:	b7 95       	ror	r27
 732:	f1 11       	cpse	r31, r1
 734:	f8 cf       	rjmp	.-16     	; 0x726 <__floatsisf+0x1c>
 736:	fa f4       	brpl	.+62     	; 0x776 <__floatsisf+0x6c>
 738:	bb 0f       	add	r27, r27
 73a:	11 f4       	brne	.+4      	; 0x740 <__floatsisf+0x36>
 73c:	60 ff       	sbrs	r22, 0
 73e:	1b c0       	rjmp	.+54     	; 0x776 <__floatsisf+0x6c>
 740:	6f 5f       	subi	r22, 0xFF	; 255
 742:	7f 4f       	sbci	r23, 0xFF	; 255
 744:	8f 4f       	sbci	r24, 0xFF	; 255
 746:	9f 4f       	sbci	r25, 0xFF	; 255
 748:	16 c0       	rjmp	.+44     	; 0x776 <__floatsisf+0x6c>
 74a:	88 23       	and	r24, r24
 74c:	11 f0       	breq	.+4      	; 0x752 <__floatsisf+0x48>
 74e:	96 e9       	ldi	r25, 0x96	; 150
 750:	11 c0       	rjmp	.+34     	; 0x774 <__floatsisf+0x6a>
 752:	77 23       	and	r23, r23
 754:	21 f0       	breq	.+8      	; 0x75e <__floatsisf+0x54>
 756:	9e e8       	ldi	r25, 0x8E	; 142
 758:	87 2f       	mov	r24, r23
 75a:	76 2f       	mov	r23, r22
 75c:	05 c0       	rjmp	.+10     	; 0x768 <__floatsisf+0x5e>
 75e:	66 23       	and	r22, r22
 760:	71 f0       	breq	.+28     	; 0x77e <__floatsisf+0x74>
 762:	96 e8       	ldi	r25, 0x86	; 134
 764:	86 2f       	mov	r24, r22
 766:	70 e0       	ldi	r23, 0x00	; 0
 768:	60 e0       	ldi	r22, 0x00	; 0
 76a:	2a f0       	brmi	.+10     	; 0x776 <__floatsisf+0x6c>
 76c:	9a 95       	dec	r25
 76e:	66 0f       	add	r22, r22
 770:	77 1f       	adc	r23, r23
 772:	88 1f       	adc	r24, r24
 774:	da f7       	brpl	.-10     	; 0x76c <__floatsisf+0x62>
 776:	88 0f       	add	r24, r24
 778:	96 95       	lsr	r25
 77a:	87 95       	ror	r24
 77c:	97 f9       	bld	r25, 7
 77e:	08 95       	ret

00000780 <__fp_inf>:
 780:	97 f9       	bld	r25, 7
 782:	9f 67       	ori	r25, 0x7F	; 127
 784:	80 e8       	ldi	r24, 0x80	; 128
 786:	70 e0       	ldi	r23, 0x00	; 0
 788:	60 e0       	ldi	r22, 0x00	; 0
 78a:	08 95       	ret

0000078c <__fp_nan>:
 78c:	9f ef       	ldi	r25, 0xFF	; 255
 78e:	80 ec       	ldi	r24, 0xC0	; 192
 790:	08 95       	ret

00000792 <__fp_pscA>:
 792:	00 24       	eor	r0, r0
 794:	0a 94       	dec	r0
 796:	16 16       	cp	r1, r22
 798:	17 06       	cpc	r1, r23
 79a:	18 06       	cpc	r1, r24
 79c:	09 06       	cpc	r0, r25
 79e:	08 95       	ret

000007a0 <__fp_pscB>:
 7a0:	00 24       	eor	r0, r0
 7a2:	0a 94       	dec	r0
 7a4:	12 16       	cp	r1, r18
 7a6:	13 06       	cpc	r1, r19
 7a8:	14 06       	cpc	r1, r20
 7aa:	05 06       	cpc	r0, r21
 7ac:	08 95       	ret

000007ae <__fp_round>:
 7ae:	09 2e       	mov	r0, r25
 7b0:	03 94       	inc	r0
 7b2:	00 0c       	add	r0, r0
 7b4:	11 f4       	brne	.+4      	; 0x7ba <__fp_round+0xc>
 7b6:	88 23       	and	r24, r24
 7b8:	52 f0       	brmi	.+20     	; 0x7ce <__fp_round+0x20>
 7ba:	bb 0f       	add	r27, r27
 7bc:	40 f4       	brcc	.+16     	; 0x7ce <__fp_round+0x20>
 7be:	bf 2b       	or	r27, r31
 7c0:	11 f4       	brne	.+4      	; 0x7c6 <__fp_round+0x18>
 7c2:	60 ff       	sbrs	r22, 0
 7c4:	04 c0       	rjmp	.+8      	; 0x7ce <__fp_round+0x20>
 7c6:	6f 5f       	subi	r22, 0xFF	; 255
 7c8:	7f 4f       	sbci	r23, 0xFF	; 255
 7ca:	8f 4f       	sbci	r24, 0xFF	; 255
 7cc:	9f 4f       	sbci	r25, 0xFF	; 255
 7ce:	08 95       	ret

000007d0 <__fp_split3>:
 7d0:	57 fd       	sbrc	r21, 7
 7d2:	90 58       	subi	r25, 0x80	; 128
 7d4:	44 0f       	add	r20, r20
 7d6:	55 1f       	adc	r21, r21
 7d8:	59 f0       	breq	.+22     	; 0x7f0 <__fp_splitA+0x10>
 7da:	5f 3f       	cpi	r21, 0xFF	; 255
 7dc:	71 f0       	breq	.+28     	; 0x7fa <__fp_splitA+0x1a>
 7de:	47 95       	ror	r20

000007e0 <__fp_splitA>:
 7e0:	88 0f       	add	r24, r24
 7e2:	97 fb       	bst	r25, 7
 7e4:	99 1f       	adc	r25, r25
 7e6:	61 f0       	breq	.+24     	; 0x800 <__fp_splitA+0x20>
 7e8:	9f 3f       	cpi	r25, 0xFF	; 255
 7ea:	79 f0       	breq	.+30     	; 0x80a <__fp_splitA+0x2a>
 7ec:	87 95       	ror	r24
 7ee:	08 95       	ret
 7f0:	12 16       	cp	r1, r18
 7f2:	13 06       	cpc	r1, r19
 7f4:	14 06       	cpc	r1, r20
 7f6:	55 1f       	adc	r21, r21
 7f8:	f2 cf       	rjmp	.-28     	; 0x7de <__fp_split3+0xe>
 7fa:	46 95       	lsr	r20
 7fc:	f1 df       	rcall	.-30     	; 0x7e0 <__fp_splitA>
 7fe:	08 c0       	rjmp	.+16     	; 0x810 <__fp_splitA+0x30>
 800:	16 16       	cp	r1, r22
 802:	17 06       	cpc	r1, r23
 804:	18 06       	cpc	r1, r24
 806:	99 1f       	adc	r25, r25
 808:	f1 cf       	rjmp	.-30     	; 0x7ec <__fp_splitA+0xc>
 80a:	86 95       	lsr	r24
 80c:	71 05       	cpc	r23, r1
 80e:	61 05       	cpc	r22, r1
 810:	08 94       	sec
 812:	08 95       	ret

00000814 <__fp_zero>:
 814:	e8 94       	clt

00000816 <__fp_szero>:
 816:	bb 27       	eor	r27, r27
 818:	66 27       	eor	r22, r22
 81a:	77 27       	eor	r23, r23
 81c:	cb 01       	movw	r24, r22
 81e:	97 f9       	bld	r25, 7
 820:	08 95       	ret

00000822 <__mulsf3>:
 822:	0e 94 24 04 	call	0x848	; 0x848 <__mulsf3x>
 826:	0c 94 d7 03 	jmp	0x7ae	; 0x7ae <__fp_round>
 82a:	0e 94 c9 03 	call	0x792	; 0x792 <__fp_pscA>
 82e:	38 f0       	brcs	.+14     	; 0x83e <__mulsf3+0x1c>
 830:	0e 94 d0 03 	call	0x7a0	; 0x7a0 <__fp_pscB>
 834:	20 f0       	brcs	.+8      	; 0x83e <__mulsf3+0x1c>
 836:	95 23       	and	r25, r21
 838:	11 f0       	breq	.+4      	; 0x83e <__mulsf3+0x1c>
 83a:	0c 94 c0 03 	jmp	0x780	; 0x780 <__fp_inf>
 83e:	0c 94 c6 03 	jmp	0x78c	; 0x78c <__fp_nan>
 842:	11 24       	eor	r1, r1
 844:	0c 94 0b 04 	jmp	0x816	; 0x816 <__fp_szero>

00000848 <__mulsf3x>:
 848:	0e 94 e8 03 	call	0x7d0	; 0x7d0 <__fp_split3>
 84c:	70 f3       	brcs	.-36     	; 0x82a <__mulsf3+0x8>

0000084e <__mulsf3_pse>:
 84e:	95 9f       	mul	r25, r21
 850:	c1 f3       	breq	.-16     	; 0x842 <__mulsf3+0x20>
 852:	95 0f       	add	r25, r21
 854:	50 e0       	ldi	r21, 0x00	; 0
 856:	55 1f       	adc	r21, r21
 858:	62 9f       	mul	r22, r18
 85a:	f0 01       	movw	r30, r0
 85c:	72 9f       	mul	r23, r18
 85e:	bb 27       	eor	r27, r27
 860:	f0 0d       	add	r31, r0
 862:	b1 1d       	adc	r27, r1
 864:	63 9f       	mul	r22, r19
 866:	aa 27       	eor	r26, r26
 868:	f0 0d       	add	r31, r0
 86a:	b1 1d       	adc	r27, r1
 86c:	aa 1f       	adc	r26, r26
 86e:	64 9f       	mul	r22, r20
 870:	66 27       	eor	r22, r22
 872:	b0 0d       	add	r27, r0
 874:	a1 1d       	adc	r26, r1
 876:	66 1f       	adc	r22, r22
 878:	82 9f       	mul	r24, r18
 87a:	22 27       	eor	r18, r18
 87c:	b0 0d       	add	r27, r0
 87e:	a1 1d       	adc	r26, r1
 880:	62 1f       	adc	r22, r18
 882:	73 9f       	mul	r23, r19
 884:	b0 0d       	add	r27, r0
 886:	a1 1d       	adc	r26, r1
 888:	62 1f       	adc	r22, r18
 88a:	83 9f       	mul	r24, r19
 88c:	a0 0d       	add	r26, r0
 88e:	61 1d       	adc	r22, r1
 890:	22 1f       	adc	r18, r18
 892:	74 9f       	mul	r23, r20
 894:	33 27       	eor	r19, r19
 896:	a0 0d       	add	r26, r0
 898:	61 1d       	adc	r22, r1
 89a:	23 1f       	adc	r18, r19
 89c:	84 9f       	mul	r24, r20
 89e:	60 0d       	add	r22, r0
 8a0:	21 1d       	adc	r18, r1
 8a2:	82 2f       	mov	r24, r18
 8a4:	76 2f       	mov	r23, r22
 8a6:	6a 2f       	mov	r22, r26
 8a8:	11 24       	eor	r1, r1
 8aa:	9f 57       	subi	r25, 0x7F	; 127
 8ac:	50 40       	sbci	r21, 0x00	; 0
 8ae:	9a f0       	brmi	.+38     	; 0x8d6 <__mulsf3_pse+0x88>
 8b0:	f1 f0       	breq	.+60     	; 0x8ee <__mulsf3_pse+0xa0>
 8b2:	88 23       	and	r24, r24
 8b4:	4a f0       	brmi	.+18     	; 0x8c8 <__mulsf3_pse+0x7a>
 8b6:	ee 0f       	add	r30, r30
 8b8:	ff 1f       	adc	r31, r31
 8ba:	bb 1f       	adc	r27, r27
 8bc:	66 1f       	adc	r22, r22
 8be:	77 1f       	adc	r23, r23
 8c0:	88 1f       	adc	r24, r24
 8c2:	91 50       	subi	r25, 0x01	; 1
 8c4:	50 40       	sbci	r21, 0x00	; 0
 8c6:	a9 f7       	brne	.-22     	; 0x8b2 <__mulsf3_pse+0x64>
 8c8:	9e 3f       	cpi	r25, 0xFE	; 254
 8ca:	51 05       	cpc	r21, r1
 8cc:	80 f0       	brcs	.+32     	; 0x8ee <__mulsf3_pse+0xa0>
 8ce:	0c 94 c0 03 	jmp	0x780	; 0x780 <__fp_inf>
 8d2:	0c 94 0b 04 	jmp	0x816	; 0x816 <__fp_szero>
 8d6:	5f 3f       	cpi	r21, 0xFF	; 255
 8d8:	e4 f3       	brlt	.-8      	; 0x8d2 <__mulsf3_pse+0x84>
 8da:	98 3e       	cpi	r25, 0xE8	; 232
 8dc:	d4 f3       	brlt	.-12     	; 0x8d2 <__mulsf3_pse+0x84>
 8de:	86 95       	lsr	r24
 8e0:	77 95       	ror	r23
 8e2:	67 95       	ror	r22
 8e4:	b7 95       	ror	r27
 8e6:	f7 95       	ror	r31
 8e8:	e7 95       	ror	r30
 8ea:	9f 5f       	subi	r25, 0xFF	; 255
 8ec:	c1 f7       	brne	.-16     	; 0x8de <__mulsf3_pse+0x90>
 8ee:	fe 2b       	or	r31, r30
 8f0:	88 0f       	add	r24, r24
 8f2:	91 1d       	adc	r25, r1
 8f4:	96 95       	lsr	r25
 8f6:	87 95       	ror	r24
 8f8:	97 f9       	bld	r25, 7
 8fa:	08 95       	ret

000008fc <sprintf>:
 8fc:	ae e0       	ldi	r26, 0x0E	; 14
 8fe:	b0 e0       	ldi	r27, 0x00	; 0
 900:	e4 e8       	ldi	r30, 0x84	; 132
 902:	f4 e0       	ldi	r31, 0x04	; 4
 904:	0c 94 2d 07 	jmp	0xe5a	; 0xe5a <__prologue_saves__+0x1c>
 908:	0d 89       	ldd	r16, Y+21	; 0x15
 90a:	1e 89       	ldd	r17, Y+22	; 0x16
 90c:	86 e0       	ldi	r24, 0x06	; 6
 90e:	8c 83       	std	Y+4, r24	; 0x04
 910:	1a 83       	std	Y+2, r17	; 0x02
 912:	09 83       	std	Y+1, r16	; 0x01
 914:	8f ef       	ldi	r24, 0xFF	; 255
 916:	9f e7       	ldi	r25, 0x7F	; 127
 918:	9e 83       	std	Y+6, r25	; 0x06
 91a:	8d 83       	std	Y+5, r24	; 0x05
 91c:	ae 01       	movw	r20, r28
 91e:	47 5e       	subi	r20, 0xE7	; 231
 920:	5f 4f       	sbci	r21, 0xFF	; 255
 922:	6f 89       	ldd	r22, Y+23	; 0x17
 924:	78 8d       	ldd	r23, Y+24	; 0x18
 926:	ce 01       	movw	r24, r28
 928:	01 96       	adiw	r24, 0x01	; 1
 92a:	0e 94 a1 04 	call	0x942	; 0x942 <vfprintf>
 92e:	2f 81       	ldd	r18, Y+7	; 0x07
 930:	38 85       	ldd	r19, Y+8	; 0x08
 932:	f8 01       	movw	r30, r16
 934:	e2 0f       	add	r30, r18
 936:	f3 1f       	adc	r31, r19
 938:	10 82       	st	Z, r1
 93a:	2e 96       	adiw	r28, 0x0e	; 14
 93c:	e4 e0       	ldi	r30, 0x04	; 4
 93e:	0c 94 49 07 	jmp	0xe92	; 0xe92 <__epilogue_restores__+0x1c>

00000942 <vfprintf>:
 942:	ac e0       	ldi	r26, 0x0C	; 12
 944:	b0 e0       	ldi	r27, 0x00	; 0
 946:	e7 ea       	ldi	r30, 0xA7	; 167
 948:	f4 e0       	ldi	r31, 0x04	; 4
 94a:	0c 94 1f 07 	jmp	0xe3e	; 0xe3e <__prologue_saves__>
 94e:	7c 01       	movw	r14, r24
 950:	6b 01       	movw	r12, r22
 952:	8a 01       	movw	r16, r20
 954:	fc 01       	movw	r30, r24
 956:	17 82       	std	Z+7, r1	; 0x07
 958:	16 82       	std	Z+6, r1	; 0x06
 95a:	83 81       	ldd	r24, Z+3	; 0x03
 95c:	81 ff       	sbrs	r24, 1
 95e:	bd c1       	rjmp	.+890    	; 0xcda <vfprintf+0x398>
 960:	ce 01       	movw	r24, r28
 962:	01 96       	adiw	r24, 0x01	; 1
 964:	4c 01       	movw	r8, r24
 966:	f7 01       	movw	r30, r14
 968:	93 81       	ldd	r25, Z+3	; 0x03
 96a:	f6 01       	movw	r30, r12
 96c:	93 fd       	sbrc	r25, 3
 96e:	85 91       	lpm	r24, Z+
 970:	93 ff       	sbrs	r25, 3
 972:	81 91       	ld	r24, Z+
 974:	6f 01       	movw	r12, r30
 976:	88 23       	and	r24, r24
 978:	09 f4       	brne	.+2      	; 0x97c <vfprintf+0x3a>
 97a:	ab c1       	rjmp	.+854    	; 0xcd2 <vfprintf+0x390>
 97c:	85 32       	cpi	r24, 0x25	; 37
 97e:	39 f4       	brne	.+14     	; 0x98e <vfprintf+0x4c>
 980:	93 fd       	sbrc	r25, 3
 982:	85 91       	lpm	r24, Z+
 984:	93 ff       	sbrs	r25, 3
 986:	81 91       	ld	r24, Z+
 988:	6f 01       	movw	r12, r30
 98a:	85 32       	cpi	r24, 0x25	; 37
 98c:	29 f4       	brne	.+10     	; 0x998 <vfprintf+0x56>
 98e:	b7 01       	movw	r22, r14
 990:	90 e0       	ldi	r25, 0x00	; 0
 992:	0e 94 89 06 	call	0xd12	; 0xd12 <fputc>
 996:	e7 cf       	rjmp	.-50     	; 0x966 <vfprintf+0x24>
 998:	51 2c       	mov	r5, r1
 99a:	31 2c       	mov	r3, r1
 99c:	20 e0       	ldi	r18, 0x00	; 0
 99e:	20 32       	cpi	r18, 0x20	; 32
 9a0:	a0 f4       	brcc	.+40     	; 0x9ca <vfprintf+0x88>
 9a2:	8b 32       	cpi	r24, 0x2B	; 43
 9a4:	69 f0       	breq	.+26     	; 0x9c0 <vfprintf+0x7e>
 9a6:	30 f4       	brcc	.+12     	; 0x9b4 <vfprintf+0x72>
 9a8:	80 32       	cpi	r24, 0x20	; 32
 9aa:	59 f0       	breq	.+22     	; 0x9c2 <vfprintf+0x80>
 9ac:	83 32       	cpi	r24, 0x23	; 35
 9ae:	69 f4       	brne	.+26     	; 0x9ca <vfprintf+0x88>
 9b0:	20 61       	ori	r18, 0x10	; 16
 9b2:	2c c0       	rjmp	.+88     	; 0xa0c <vfprintf+0xca>
 9b4:	8d 32       	cpi	r24, 0x2D	; 45
 9b6:	39 f0       	breq	.+14     	; 0x9c6 <vfprintf+0x84>
 9b8:	80 33       	cpi	r24, 0x30	; 48
 9ba:	39 f4       	brne	.+14     	; 0x9ca <vfprintf+0x88>
 9bc:	21 60       	ori	r18, 0x01	; 1
 9be:	26 c0       	rjmp	.+76     	; 0xa0c <vfprintf+0xca>
 9c0:	22 60       	ori	r18, 0x02	; 2
 9c2:	24 60       	ori	r18, 0x04	; 4
 9c4:	23 c0       	rjmp	.+70     	; 0xa0c <vfprintf+0xca>
 9c6:	28 60       	ori	r18, 0x08	; 8
 9c8:	21 c0       	rjmp	.+66     	; 0xa0c <vfprintf+0xca>
 9ca:	27 fd       	sbrc	r18, 7
 9cc:	27 c0       	rjmp	.+78     	; 0xa1c <vfprintf+0xda>
 9ce:	30 ed       	ldi	r19, 0xD0	; 208
 9d0:	38 0f       	add	r19, r24
 9d2:	3a 30       	cpi	r19, 0x0A	; 10
 9d4:	78 f4       	brcc	.+30     	; 0x9f4 <vfprintf+0xb2>
 9d6:	26 ff       	sbrs	r18, 6
 9d8:	06 c0       	rjmp	.+12     	; 0x9e6 <vfprintf+0xa4>
 9da:	fa e0       	ldi	r31, 0x0A	; 10
 9dc:	5f 9e       	mul	r5, r31
 9de:	30 0d       	add	r19, r0
 9e0:	11 24       	eor	r1, r1
 9e2:	53 2e       	mov	r5, r19
 9e4:	13 c0       	rjmp	.+38     	; 0xa0c <vfprintf+0xca>
 9e6:	8a e0       	ldi	r24, 0x0A	; 10
 9e8:	38 9e       	mul	r3, r24
 9ea:	30 0d       	add	r19, r0
 9ec:	11 24       	eor	r1, r1
 9ee:	33 2e       	mov	r3, r19
 9f0:	20 62       	ori	r18, 0x20	; 32
 9f2:	0c c0       	rjmp	.+24     	; 0xa0c <vfprintf+0xca>
 9f4:	8e 32       	cpi	r24, 0x2E	; 46
 9f6:	21 f4       	brne	.+8      	; 0xa00 <vfprintf+0xbe>
 9f8:	26 fd       	sbrc	r18, 6
 9fa:	6b c1       	rjmp	.+726    	; 0xcd2 <vfprintf+0x390>
 9fc:	20 64       	ori	r18, 0x40	; 64
 9fe:	06 c0       	rjmp	.+12     	; 0xa0c <vfprintf+0xca>
 a00:	8c 36       	cpi	r24, 0x6C	; 108
 a02:	11 f4       	brne	.+4      	; 0xa08 <vfprintf+0xc6>
 a04:	20 68       	ori	r18, 0x80	; 128
 a06:	02 c0       	rjmp	.+4      	; 0xa0c <vfprintf+0xca>
 a08:	88 36       	cpi	r24, 0x68	; 104
 a0a:	41 f4       	brne	.+16     	; 0xa1c <vfprintf+0xda>
 a0c:	f6 01       	movw	r30, r12
 a0e:	93 fd       	sbrc	r25, 3
 a10:	85 91       	lpm	r24, Z+
 a12:	93 ff       	sbrs	r25, 3
 a14:	81 91       	ld	r24, Z+
 a16:	6f 01       	movw	r12, r30
 a18:	81 11       	cpse	r24, r1
 a1a:	c1 cf       	rjmp	.-126    	; 0x99e <vfprintf+0x5c>
 a1c:	98 2f       	mov	r25, r24
 a1e:	9f 7d       	andi	r25, 0xDF	; 223
 a20:	95 54       	subi	r25, 0x45	; 69
 a22:	93 30       	cpi	r25, 0x03	; 3
 a24:	28 f4       	brcc	.+10     	; 0xa30 <vfprintf+0xee>
 a26:	0c 5f       	subi	r16, 0xFC	; 252
 a28:	1f 4f       	sbci	r17, 0xFF	; 255
 a2a:	ff e3       	ldi	r31, 0x3F	; 63
 a2c:	f9 83       	std	Y+1, r31	; 0x01
 a2e:	0d c0       	rjmp	.+26     	; 0xa4a <vfprintf+0x108>
 a30:	83 36       	cpi	r24, 0x63	; 99
 a32:	31 f0       	breq	.+12     	; 0xa40 <vfprintf+0xfe>
 a34:	83 37       	cpi	r24, 0x73	; 115
 a36:	71 f0       	breq	.+28     	; 0xa54 <vfprintf+0x112>
 a38:	83 35       	cpi	r24, 0x53	; 83
 a3a:	09 f0       	breq	.+2      	; 0xa3e <vfprintf+0xfc>
 a3c:	5b c0       	rjmp	.+182    	; 0xaf4 <vfprintf+0x1b2>
 a3e:	22 c0       	rjmp	.+68     	; 0xa84 <vfprintf+0x142>
 a40:	f8 01       	movw	r30, r16
 a42:	80 81       	ld	r24, Z
 a44:	89 83       	std	Y+1, r24	; 0x01
 a46:	0e 5f       	subi	r16, 0xFE	; 254
 a48:	1f 4f       	sbci	r17, 0xFF	; 255
 a4a:	44 24       	eor	r4, r4
 a4c:	43 94       	inc	r4
 a4e:	51 2c       	mov	r5, r1
 a50:	54 01       	movw	r10, r8
 a52:	15 c0       	rjmp	.+42     	; 0xa7e <vfprintf+0x13c>
 a54:	38 01       	movw	r6, r16
 a56:	f2 e0       	ldi	r31, 0x02	; 2
 a58:	6f 0e       	add	r6, r31
 a5a:	71 1c       	adc	r7, r1
 a5c:	f8 01       	movw	r30, r16
 a5e:	a0 80       	ld	r10, Z
 a60:	b1 80       	ldd	r11, Z+1	; 0x01
 a62:	26 ff       	sbrs	r18, 6
 a64:	03 c0       	rjmp	.+6      	; 0xa6c <vfprintf+0x12a>
 a66:	65 2d       	mov	r22, r5
 a68:	70 e0       	ldi	r23, 0x00	; 0
 a6a:	02 c0       	rjmp	.+4      	; 0xa70 <vfprintf+0x12e>
 a6c:	6f ef       	ldi	r22, 0xFF	; 255
 a6e:	7f ef       	ldi	r23, 0xFF	; 255
 a70:	c5 01       	movw	r24, r10
 a72:	2c 87       	std	Y+12, r18	; 0x0c
 a74:	0e 94 7e 06 	call	0xcfc	; 0xcfc <strnlen>
 a78:	2c 01       	movw	r4, r24
 a7a:	83 01       	movw	r16, r6
 a7c:	2c 85       	ldd	r18, Y+12	; 0x0c
 a7e:	2f 77       	andi	r18, 0x7F	; 127
 a80:	22 2e       	mov	r2, r18
 a82:	17 c0       	rjmp	.+46     	; 0xab2 <vfprintf+0x170>
 a84:	38 01       	movw	r6, r16
 a86:	f2 e0       	ldi	r31, 0x02	; 2
 a88:	6f 0e       	add	r6, r31
 a8a:	71 1c       	adc	r7, r1
 a8c:	f8 01       	movw	r30, r16
 a8e:	a0 80       	ld	r10, Z
 a90:	b1 80       	ldd	r11, Z+1	; 0x01
 a92:	26 ff       	sbrs	r18, 6
 a94:	03 c0       	rjmp	.+6      	; 0xa9c <vfprintf+0x15a>
 a96:	65 2d       	mov	r22, r5
 a98:	70 e0       	ldi	r23, 0x00	; 0
 a9a:	02 c0       	rjmp	.+4      	; 0xaa0 <vfprintf+0x15e>
 a9c:	6f ef       	ldi	r22, 0xFF	; 255
 a9e:	7f ef       	ldi	r23, 0xFF	; 255
 aa0:	c5 01       	movw	r24, r10
 aa2:	2c 87       	std	Y+12, r18	; 0x0c
 aa4:	0e 94 73 06 	call	0xce6	; 0xce6 <strnlen_P>
 aa8:	2c 01       	movw	r4, r24
 aaa:	2c 85       	ldd	r18, Y+12	; 0x0c
 aac:	20 68       	ori	r18, 0x80	; 128
 aae:	22 2e       	mov	r2, r18
 ab0:	83 01       	movw	r16, r6
 ab2:	23 fc       	sbrc	r2, 3
 ab4:	1b c0       	rjmp	.+54     	; 0xaec <vfprintf+0x1aa>
 ab6:	83 2d       	mov	r24, r3
 ab8:	90 e0       	ldi	r25, 0x00	; 0
 aba:	48 16       	cp	r4, r24
 abc:	59 06       	cpc	r5, r25
 abe:	b0 f4       	brcc	.+44     	; 0xaec <vfprintf+0x1aa>
 ac0:	b7 01       	movw	r22, r14
 ac2:	80 e2       	ldi	r24, 0x20	; 32
 ac4:	90 e0       	ldi	r25, 0x00	; 0
 ac6:	0e 94 89 06 	call	0xd12	; 0xd12 <fputc>
 aca:	3a 94       	dec	r3
 acc:	f4 cf       	rjmp	.-24     	; 0xab6 <vfprintf+0x174>
 ace:	f5 01       	movw	r30, r10
 ad0:	27 fc       	sbrc	r2, 7
 ad2:	85 91       	lpm	r24, Z+
 ad4:	27 fe       	sbrs	r2, 7
 ad6:	81 91       	ld	r24, Z+
 ad8:	5f 01       	movw	r10, r30
 ada:	b7 01       	movw	r22, r14
 adc:	90 e0       	ldi	r25, 0x00	; 0
 ade:	0e 94 89 06 	call	0xd12	; 0xd12 <fputc>
 ae2:	31 10       	cpse	r3, r1
 ae4:	3a 94       	dec	r3
 ae6:	f1 e0       	ldi	r31, 0x01	; 1
 ae8:	4f 1a       	sub	r4, r31
 aea:	51 08       	sbc	r5, r1
 aec:	41 14       	cp	r4, r1
 aee:	51 04       	cpc	r5, r1
 af0:	71 f7       	brne	.-36     	; 0xace <vfprintf+0x18c>
 af2:	e5 c0       	rjmp	.+458    	; 0xcbe <vfprintf+0x37c>
 af4:	84 36       	cpi	r24, 0x64	; 100
 af6:	11 f0       	breq	.+4      	; 0xafc <vfprintf+0x1ba>
 af8:	89 36       	cpi	r24, 0x69	; 105
 afa:	39 f5       	brne	.+78     	; 0xb4a <vfprintf+0x208>
 afc:	f8 01       	movw	r30, r16
 afe:	27 ff       	sbrs	r18, 7
 b00:	07 c0       	rjmp	.+14     	; 0xb10 <vfprintf+0x1ce>
 b02:	60 81       	ld	r22, Z
 b04:	71 81       	ldd	r23, Z+1	; 0x01
 b06:	82 81       	ldd	r24, Z+2	; 0x02
 b08:	93 81       	ldd	r25, Z+3	; 0x03
 b0a:	0c 5f       	subi	r16, 0xFC	; 252
 b0c:	1f 4f       	sbci	r17, 0xFF	; 255
 b0e:	08 c0       	rjmp	.+16     	; 0xb20 <vfprintf+0x1de>
 b10:	60 81       	ld	r22, Z
 b12:	71 81       	ldd	r23, Z+1	; 0x01
 b14:	07 2e       	mov	r0, r23
 b16:	00 0c       	add	r0, r0
 b18:	88 0b       	sbc	r24, r24
 b1a:	99 0b       	sbc	r25, r25
 b1c:	0e 5f       	subi	r16, 0xFE	; 254
 b1e:	1f 4f       	sbci	r17, 0xFF	; 255
 b20:	2f 76       	andi	r18, 0x6F	; 111
 b22:	72 2e       	mov	r7, r18
 b24:	97 ff       	sbrs	r25, 7
 b26:	09 c0       	rjmp	.+18     	; 0xb3a <vfprintf+0x1f8>
 b28:	90 95       	com	r25
 b2a:	80 95       	com	r24
 b2c:	70 95       	com	r23
 b2e:	61 95       	neg	r22
 b30:	7f 4f       	sbci	r23, 0xFF	; 255
 b32:	8f 4f       	sbci	r24, 0xFF	; 255
 b34:	9f 4f       	sbci	r25, 0xFF	; 255
 b36:	20 68       	ori	r18, 0x80	; 128
 b38:	72 2e       	mov	r7, r18
 b3a:	2a e0       	ldi	r18, 0x0A	; 10
 b3c:	30 e0       	ldi	r19, 0x00	; 0
 b3e:	a4 01       	movw	r20, r8
 b40:	0e 94 c1 06 	call	0xd82	; 0xd82 <__ultoa_invert>
 b44:	a8 2e       	mov	r10, r24
 b46:	a8 18       	sub	r10, r8
 b48:	44 c0       	rjmp	.+136    	; 0xbd2 <vfprintf+0x290>
 b4a:	85 37       	cpi	r24, 0x75	; 117
 b4c:	29 f4       	brne	.+10     	; 0xb58 <vfprintf+0x216>
 b4e:	2f 7e       	andi	r18, 0xEF	; 239
 b50:	b2 2e       	mov	r11, r18
 b52:	2a e0       	ldi	r18, 0x0A	; 10
 b54:	30 e0       	ldi	r19, 0x00	; 0
 b56:	25 c0       	rjmp	.+74     	; 0xba2 <vfprintf+0x260>
 b58:	f2 2f       	mov	r31, r18
 b5a:	f9 7f       	andi	r31, 0xF9	; 249
 b5c:	bf 2e       	mov	r11, r31
 b5e:	8f 36       	cpi	r24, 0x6F	; 111
 b60:	c1 f0       	breq	.+48     	; 0xb92 <vfprintf+0x250>
 b62:	18 f4       	brcc	.+6      	; 0xb6a <vfprintf+0x228>
 b64:	88 35       	cpi	r24, 0x58	; 88
 b66:	79 f0       	breq	.+30     	; 0xb86 <vfprintf+0x244>
 b68:	b4 c0       	rjmp	.+360    	; 0xcd2 <vfprintf+0x390>
 b6a:	80 37       	cpi	r24, 0x70	; 112
 b6c:	19 f0       	breq	.+6      	; 0xb74 <vfprintf+0x232>
 b6e:	88 37       	cpi	r24, 0x78	; 120
 b70:	21 f0       	breq	.+8      	; 0xb7a <vfprintf+0x238>
 b72:	af c0       	rjmp	.+350    	; 0xcd2 <vfprintf+0x390>
 b74:	2f 2f       	mov	r18, r31
 b76:	20 61       	ori	r18, 0x10	; 16
 b78:	b2 2e       	mov	r11, r18
 b7a:	b4 fe       	sbrs	r11, 4
 b7c:	0d c0       	rjmp	.+26     	; 0xb98 <vfprintf+0x256>
 b7e:	8b 2d       	mov	r24, r11
 b80:	84 60       	ori	r24, 0x04	; 4
 b82:	b8 2e       	mov	r11, r24
 b84:	09 c0       	rjmp	.+18     	; 0xb98 <vfprintf+0x256>
 b86:	24 ff       	sbrs	r18, 4
 b88:	0a c0       	rjmp	.+20     	; 0xb9e <vfprintf+0x25c>
 b8a:	9f 2f       	mov	r25, r31
 b8c:	96 60       	ori	r25, 0x06	; 6
 b8e:	b9 2e       	mov	r11, r25
 b90:	06 c0       	rjmp	.+12     	; 0xb9e <vfprintf+0x25c>
 b92:	28 e0       	ldi	r18, 0x08	; 8
 b94:	30 e0       	ldi	r19, 0x00	; 0
 b96:	05 c0       	rjmp	.+10     	; 0xba2 <vfprintf+0x260>
 b98:	20 e1       	ldi	r18, 0x10	; 16
 b9a:	30 e0       	ldi	r19, 0x00	; 0
 b9c:	02 c0       	rjmp	.+4      	; 0xba2 <vfprintf+0x260>
 b9e:	20 e1       	ldi	r18, 0x10	; 16
 ba0:	32 e0       	ldi	r19, 0x02	; 2
 ba2:	f8 01       	movw	r30, r16
 ba4:	b7 fe       	sbrs	r11, 7
 ba6:	07 c0       	rjmp	.+14     	; 0xbb6 <vfprintf+0x274>
 ba8:	60 81       	ld	r22, Z
 baa:	71 81       	ldd	r23, Z+1	; 0x01
 bac:	82 81       	ldd	r24, Z+2	; 0x02
 bae:	93 81       	ldd	r25, Z+3	; 0x03
 bb0:	0c 5f       	subi	r16, 0xFC	; 252
 bb2:	1f 4f       	sbci	r17, 0xFF	; 255
 bb4:	06 c0       	rjmp	.+12     	; 0xbc2 <vfprintf+0x280>
 bb6:	60 81       	ld	r22, Z
 bb8:	71 81       	ldd	r23, Z+1	; 0x01
 bba:	80 e0       	ldi	r24, 0x00	; 0
 bbc:	90 e0       	ldi	r25, 0x00	; 0
 bbe:	0e 5f       	subi	r16, 0xFE	; 254
 bc0:	1f 4f       	sbci	r17, 0xFF	; 255
 bc2:	a4 01       	movw	r20, r8
 bc4:	0e 94 c1 06 	call	0xd82	; 0xd82 <__ultoa_invert>
 bc8:	a8 2e       	mov	r10, r24
 bca:	a8 18       	sub	r10, r8
 bcc:	fb 2d       	mov	r31, r11
 bce:	ff 77       	andi	r31, 0x7F	; 127
 bd0:	7f 2e       	mov	r7, r31
 bd2:	76 fe       	sbrs	r7, 6
 bd4:	0b c0       	rjmp	.+22     	; 0xbec <vfprintf+0x2aa>
 bd6:	37 2d       	mov	r19, r7
 bd8:	3e 7f       	andi	r19, 0xFE	; 254
 bda:	a5 14       	cp	r10, r5
 bdc:	50 f4       	brcc	.+20     	; 0xbf2 <vfprintf+0x2b0>
 bde:	74 fe       	sbrs	r7, 4
 be0:	0a c0       	rjmp	.+20     	; 0xbf6 <vfprintf+0x2b4>
 be2:	72 fc       	sbrc	r7, 2
 be4:	08 c0       	rjmp	.+16     	; 0xbf6 <vfprintf+0x2b4>
 be6:	37 2d       	mov	r19, r7
 be8:	3e 7e       	andi	r19, 0xEE	; 238
 bea:	05 c0       	rjmp	.+10     	; 0xbf6 <vfprintf+0x2b4>
 bec:	ba 2c       	mov	r11, r10
 bee:	37 2d       	mov	r19, r7
 bf0:	03 c0       	rjmp	.+6      	; 0xbf8 <vfprintf+0x2b6>
 bf2:	ba 2c       	mov	r11, r10
 bf4:	01 c0       	rjmp	.+2      	; 0xbf8 <vfprintf+0x2b6>
 bf6:	b5 2c       	mov	r11, r5
 bf8:	34 ff       	sbrs	r19, 4
 bfa:	0d c0       	rjmp	.+26     	; 0xc16 <vfprintf+0x2d4>
 bfc:	fe 01       	movw	r30, r28
 bfe:	ea 0d       	add	r30, r10
 c00:	f1 1d       	adc	r31, r1
 c02:	80 81       	ld	r24, Z
 c04:	80 33       	cpi	r24, 0x30	; 48
 c06:	11 f4       	brne	.+4      	; 0xc0c <vfprintf+0x2ca>
 c08:	39 7e       	andi	r19, 0xE9	; 233
 c0a:	09 c0       	rjmp	.+18     	; 0xc1e <vfprintf+0x2dc>
 c0c:	32 ff       	sbrs	r19, 2
 c0e:	06 c0       	rjmp	.+12     	; 0xc1c <vfprintf+0x2da>
 c10:	b3 94       	inc	r11
 c12:	b3 94       	inc	r11
 c14:	04 c0       	rjmp	.+8      	; 0xc1e <vfprintf+0x2dc>
 c16:	83 2f       	mov	r24, r19
 c18:	86 78       	andi	r24, 0x86	; 134
 c1a:	09 f0       	breq	.+2      	; 0xc1e <vfprintf+0x2dc>
 c1c:	b3 94       	inc	r11
 c1e:	33 fd       	sbrc	r19, 3
 c20:	13 c0       	rjmp	.+38     	; 0xc48 <vfprintf+0x306>
 c22:	30 ff       	sbrs	r19, 0
 c24:	06 c0       	rjmp	.+12     	; 0xc32 <vfprintf+0x2f0>
 c26:	5a 2c       	mov	r5, r10
 c28:	b3 14       	cp	r11, r3
 c2a:	18 f4       	brcc	.+6      	; 0xc32 <vfprintf+0x2f0>
 c2c:	53 0c       	add	r5, r3
 c2e:	5b 18       	sub	r5, r11
 c30:	b3 2c       	mov	r11, r3
 c32:	b3 14       	cp	r11, r3
 c34:	68 f4       	brcc	.+26     	; 0xc50 <vfprintf+0x30e>
 c36:	b7 01       	movw	r22, r14
 c38:	80 e2       	ldi	r24, 0x20	; 32
 c3a:	90 e0       	ldi	r25, 0x00	; 0
 c3c:	3c 87       	std	Y+12, r19	; 0x0c
 c3e:	0e 94 89 06 	call	0xd12	; 0xd12 <fputc>
 c42:	b3 94       	inc	r11
 c44:	3c 85       	ldd	r19, Y+12	; 0x0c
 c46:	f5 cf       	rjmp	.-22     	; 0xc32 <vfprintf+0x2f0>
 c48:	b3 14       	cp	r11, r3
 c4a:	10 f4       	brcc	.+4      	; 0xc50 <vfprintf+0x30e>
 c4c:	3b 18       	sub	r3, r11
 c4e:	01 c0       	rjmp	.+2      	; 0xc52 <vfprintf+0x310>
 c50:	31 2c       	mov	r3, r1
 c52:	34 ff       	sbrs	r19, 4
 c54:	12 c0       	rjmp	.+36     	; 0xc7a <vfprintf+0x338>
 c56:	b7 01       	movw	r22, r14
 c58:	80 e3       	ldi	r24, 0x30	; 48
 c5a:	90 e0       	ldi	r25, 0x00	; 0
 c5c:	3c 87       	std	Y+12, r19	; 0x0c
 c5e:	0e 94 89 06 	call	0xd12	; 0xd12 <fputc>
 c62:	3c 85       	ldd	r19, Y+12	; 0x0c
 c64:	32 ff       	sbrs	r19, 2
 c66:	17 c0       	rjmp	.+46     	; 0xc96 <vfprintf+0x354>
 c68:	31 fd       	sbrc	r19, 1
 c6a:	03 c0       	rjmp	.+6      	; 0xc72 <vfprintf+0x330>
 c6c:	88 e7       	ldi	r24, 0x78	; 120
 c6e:	90 e0       	ldi	r25, 0x00	; 0
 c70:	02 c0       	rjmp	.+4      	; 0xc76 <vfprintf+0x334>
 c72:	88 e5       	ldi	r24, 0x58	; 88
 c74:	90 e0       	ldi	r25, 0x00	; 0
 c76:	b7 01       	movw	r22, r14
 c78:	0c c0       	rjmp	.+24     	; 0xc92 <vfprintf+0x350>
 c7a:	83 2f       	mov	r24, r19
 c7c:	86 78       	andi	r24, 0x86	; 134
 c7e:	59 f0       	breq	.+22     	; 0xc96 <vfprintf+0x354>
 c80:	31 ff       	sbrs	r19, 1
 c82:	02 c0       	rjmp	.+4      	; 0xc88 <vfprintf+0x346>
 c84:	8b e2       	ldi	r24, 0x2B	; 43
 c86:	01 c0       	rjmp	.+2      	; 0xc8a <vfprintf+0x348>
 c88:	80 e2       	ldi	r24, 0x20	; 32
 c8a:	37 fd       	sbrc	r19, 7
 c8c:	8d e2       	ldi	r24, 0x2D	; 45
 c8e:	b7 01       	movw	r22, r14
 c90:	90 e0       	ldi	r25, 0x00	; 0
 c92:	0e 94 89 06 	call	0xd12	; 0xd12 <fputc>
 c96:	a5 14       	cp	r10, r5
 c98:	38 f4       	brcc	.+14     	; 0xca8 <vfprintf+0x366>
 c9a:	b7 01       	movw	r22, r14
 c9c:	80 e3       	ldi	r24, 0x30	; 48
 c9e:	90 e0       	ldi	r25, 0x00	; 0
 ca0:	0e 94 89 06 	call	0xd12	; 0xd12 <fputc>
 ca4:	5a 94       	dec	r5
 ca6:	f7 cf       	rjmp	.-18     	; 0xc96 <vfprintf+0x354>
 ca8:	aa 94       	dec	r10
 caa:	f4 01       	movw	r30, r8
 cac:	ea 0d       	add	r30, r10
 cae:	f1 1d       	adc	r31, r1
 cb0:	80 81       	ld	r24, Z
 cb2:	b7 01       	movw	r22, r14
 cb4:	90 e0       	ldi	r25, 0x00	; 0
 cb6:	0e 94 89 06 	call	0xd12	; 0xd12 <fputc>
 cba:	a1 10       	cpse	r10, r1
 cbc:	f5 cf       	rjmp	.-22     	; 0xca8 <vfprintf+0x366>
 cbe:	33 20       	and	r3, r3
 cc0:	09 f4       	brne	.+2      	; 0xcc4 <vfprintf+0x382>
 cc2:	51 ce       	rjmp	.-862    	; 0x966 <vfprintf+0x24>
 cc4:	b7 01       	movw	r22, r14
 cc6:	80 e2       	ldi	r24, 0x20	; 32
 cc8:	90 e0       	ldi	r25, 0x00	; 0
 cca:	0e 94 89 06 	call	0xd12	; 0xd12 <fputc>
 cce:	3a 94       	dec	r3
 cd0:	f6 cf       	rjmp	.-20     	; 0xcbe <vfprintf+0x37c>
 cd2:	f7 01       	movw	r30, r14
 cd4:	86 81       	ldd	r24, Z+6	; 0x06
 cd6:	97 81       	ldd	r25, Z+7	; 0x07
 cd8:	02 c0       	rjmp	.+4      	; 0xcde <vfprintf+0x39c>
 cda:	8f ef       	ldi	r24, 0xFF	; 255
 cdc:	9f ef       	ldi	r25, 0xFF	; 255
 cde:	2c 96       	adiw	r28, 0x0c	; 12
 ce0:	e2 e1       	ldi	r30, 0x12	; 18
 ce2:	0c 94 3b 07 	jmp	0xe76	; 0xe76 <__epilogue_restores__>

00000ce6 <strnlen_P>:
 ce6:	fc 01       	movw	r30, r24
 ce8:	05 90       	lpm	r0, Z+
 cea:	61 50       	subi	r22, 0x01	; 1
 cec:	70 40       	sbci	r23, 0x00	; 0
 cee:	01 10       	cpse	r0, r1
 cf0:	d8 f7       	brcc	.-10     	; 0xce8 <strnlen_P+0x2>
 cf2:	80 95       	com	r24
 cf4:	90 95       	com	r25
 cf6:	8e 0f       	add	r24, r30
 cf8:	9f 1f       	adc	r25, r31
 cfa:	08 95       	ret

00000cfc <strnlen>:
 cfc:	fc 01       	movw	r30, r24
 cfe:	61 50       	subi	r22, 0x01	; 1
 d00:	70 40       	sbci	r23, 0x00	; 0
 d02:	01 90       	ld	r0, Z+
 d04:	01 10       	cpse	r0, r1
 d06:	d8 f7       	brcc	.-10     	; 0xcfe <strnlen+0x2>
 d08:	80 95       	com	r24
 d0a:	90 95       	com	r25
 d0c:	8e 0f       	add	r24, r30
 d0e:	9f 1f       	adc	r25, r31
 d10:	08 95       	ret

00000d12 <fputc>:
 d12:	0f 93       	push	r16
 d14:	1f 93       	push	r17
 d16:	cf 93       	push	r28
 d18:	df 93       	push	r29
 d1a:	fb 01       	movw	r30, r22
 d1c:	23 81       	ldd	r18, Z+3	; 0x03
 d1e:	21 fd       	sbrc	r18, 1
 d20:	03 c0       	rjmp	.+6      	; 0xd28 <fputc+0x16>
 d22:	8f ef       	ldi	r24, 0xFF	; 255
 d24:	9f ef       	ldi	r25, 0xFF	; 255
 d26:	28 c0       	rjmp	.+80     	; 0xd78 <fputc+0x66>
 d28:	22 ff       	sbrs	r18, 2
 d2a:	16 c0       	rjmp	.+44     	; 0xd58 <fputc+0x46>
 d2c:	46 81       	ldd	r20, Z+6	; 0x06
 d2e:	57 81       	ldd	r21, Z+7	; 0x07
 d30:	24 81       	ldd	r18, Z+4	; 0x04
 d32:	35 81       	ldd	r19, Z+5	; 0x05
 d34:	42 17       	cp	r20, r18
 d36:	53 07       	cpc	r21, r19
 d38:	44 f4       	brge	.+16     	; 0xd4a <fputc+0x38>
 d3a:	a0 81       	ld	r26, Z
 d3c:	b1 81       	ldd	r27, Z+1	; 0x01
 d3e:	9d 01       	movw	r18, r26
 d40:	2f 5f       	subi	r18, 0xFF	; 255
 d42:	3f 4f       	sbci	r19, 0xFF	; 255
 d44:	31 83       	std	Z+1, r19	; 0x01
 d46:	20 83       	st	Z, r18
 d48:	8c 93       	st	X, r24
 d4a:	26 81       	ldd	r18, Z+6	; 0x06
 d4c:	37 81       	ldd	r19, Z+7	; 0x07
 d4e:	2f 5f       	subi	r18, 0xFF	; 255
 d50:	3f 4f       	sbci	r19, 0xFF	; 255
 d52:	37 83       	std	Z+7, r19	; 0x07
 d54:	26 83       	std	Z+6, r18	; 0x06
 d56:	10 c0       	rjmp	.+32     	; 0xd78 <fputc+0x66>
 d58:	eb 01       	movw	r28, r22
 d5a:	09 2f       	mov	r16, r25
 d5c:	18 2f       	mov	r17, r24
 d5e:	00 84       	ldd	r0, Z+8	; 0x08
 d60:	f1 85       	ldd	r31, Z+9	; 0x09
 d62:	e0 2d       	mov	r30, r0
 d64:	09 95       	icall
 d66:	89 2b       	or	r24, r25
 d68:	e1 f6       	brne	.-72     	; 0xd22 <fputc+0x10>
 d6a:	8e 81       	ldd	r24, Y+6	; 0x06
 d6c:	9f 81       	ldd	r25, Y+7	; 0x07
 d6e:	01 96       	adiw	r24, 0x01	; 1
 d70:	9f 83       	std	Y+7, r25	; 0x07
 d72:	8e 83       	std	Y+6, r24	; 0x06
 d74:	81 2f       	mov	r24, r17
 d76:	90 2f       	mov	r25, r16
 d78:	df 91       	pop	r29
 d7a:	cf 91       	pop	r28
 d7c:	1f 91       	pop	r17
 d7e:	0f 91       	pop	r16
 d80:	08 95       	ret

00000d82 <__ultoa_invert>:
 d82:	fa 01       	movw	r30, r20
 d84:	aa 27       	eor	r26, r26
 d86:	28 30       	cpi	r18, 0x08	; 8
 d88:	51 f1       	breq	.+84     	; 0xdde <__ultoa_invert+0x5c>
 d8a:	20 31       	cpi	r18, 0x10	; 16
 d8c:	81 f1       	breq	.+96     	; 0xdee <__ultoa_invert+0x6c>
 d8e:	e8 94       	clt
 d90:	6f 93       	push	r22
 d92:	6e 7f       	andi	r22, 0xFE	; 254
 d94:	6e 5f       	subi	r22, 0xFE	; 254
 d96:	7f 4f       	sbci	r23, 0xFF	; 255
 d98:	8f 4f       	sbci	r24, 0xFF	; 255
 d9a:	9f 4f       	sbci	r25, 0xFF	; 255
 d9c:	af 4f       	sbci	r26, 0xFF	; 255
 d9e:	b1 e0       	ldi	r27, 0x01	; 1
 da0:	3e d0       	rcall	.+124    	; 0xe1e <__ultoa_invert+0x9c>
 da2:	b4 e0       	ldi	r27, 0x04	; 4
 da4:	3c d0       	rcall	.+120    	; 0xe1e <__ultoa_invert+0x9c>
 da6:	67 0f       	add	r22, r23
 da8:	78 1f       	adc	r23, r24
 daa:	89 1f       	adc	r24, r25
 dac:	9a 1f       	adc	r25, r26
 dae:	a1 1d       	adc	r26, r1
 db0:	68 0f       	add	r22, r24
 db2:	79 1f       	adc	r23, r25
 db4:	8a 1f       	adc	r24, r26
 db6:	91 1d       	adc	r25, r1
 db8:	a1 1d       	adc	r26, r1
 dba:	6a 0f       	add	r22, r26
 dbc:	71 1d       	adc	r23, r1
 dbe:	81 1d       	adc	r24, r1
 dc0:	91 1d       	adc	r25, r1
 dc2:	a1 1d       	adc	r26, r1
 dc4:	20 d0       	rcall	.+64     	; 0xe06 <__ultoa_invert+0x84>
 dc6:	09 f4       	brne	.+2      	; 0xdca <__ultoa_invert+0x48>
 dc8:	68 94       	set
 dca:	3f 91       	pop	r19
 dcc:	2a e0       	ldi	r18, 0x0A	; 10
 dce:	26 9f       	mul	r18, r22
 dd0:	11 24       	eor	r1, r1
 dd2:	30 19       	sub	r19, r0
 dd4:	30 5d       	subi	r19, 0xD0	; 208
 dd6:	31 93       	st	Z+, r19
 dd8:	de f6       	brtc	.-74     	; 0xd90 <__ultoa_invert+0xe>
 dda:	cf 01       	movw	r24, r30
 ddc:	08 95       	ret
 dde:	46 2f       	mov	r20, r22
 de0:	47 70       	andi	r20, 0x07	; 7
 de2:	40 5d       	subi	r20, 0xD0	; 208
 de4:	41 93       	st	Z+, r20
 de6:	b3 e0       	ldi	r27, 0x03	; 3
 de8:	0f d0       	rcall	.+30     	; 0xe08 <__ultoa_invert+0x86>
 dea:	c9 f7       	brne	.-14     	; 0xdde <__ultoa_invert+0x5c>
 dec:	f6 cf       	rjmp	.-20     	; 0xdda <__ultoa_invert+0x58>
 dee:	46 2f       	mov	r20, r22
 df0:	4f 70       	andi	r20, 0x0F	; 15
 df2:	40 5d       	subi	r20, 0xD0	; 208
 df4:	4a 33       	cpi	r20, 0x3A	; 58
 df6:	18 f0       	brcs	.+6      	; 0xdfe <__ultoa_invert+0x7c>
 df8:	49 5d       	subi	r20, 0xD9	; 217
 dfa:	31 fd       	sbrc	r19, 1
 dfc:	40 52       	subi	r20, 0x20	; 32
 dfe:	41 93       	st	Z+, r20
 e00:	02 d0       	rcall	.+4      	; 0xe06 <__ultoa_invert+0x84>
 e02:	a9 f7       	brne	.-22     	; 0xdee <__ultoa_invert+0x6c>
 e04:	ea cf       	rjmp	.-44     	; 0xdda <__ultoa_invert+0x58>
 e06:	b4 e0       	ldi	r27, 0x04	; 4
 e08:	a6 95       	lsr	r26
 e0a:	97 95       	ror	r25
 e0c:	87 95       	ror	r24
 e0e:	77 95       	ror	r23
 e10:	67 95       	ror	r22
 e12:	ba 95       	dec	r27
 e14:	c9 f7       	brne	.-14     	; 0xe08 <__ultoa_invert+0x86>
 e16:	00 97       	sbiw	r24, 0x00	; 0
 e18:	61 05       	cpc	r22, r1
 e1a:	71 05       	cpc	r23, r1
 e1c:	08 95       	ret
 e1e:	9b 01       	movw	r18, r22
 e20:	ac 01       	movw	r20, r24
 e22:	0a 2e       	mov	r0, r26
 e24:	06 94       	lsr	r0
 e26:	57 95       	ror	r21
 e28:	47 95       	ror	r20
 e2a:	37 95       	ror	r19
 e2c:	27 95       	ror	r18
 e2e:	ba 95       	dec	r27
 e30:	c9 f7       	brne	.-14     	; 0xe24 <__ultoa_invert+0xa2>
 e32:	62 0f       	add	r22, r18
 e34:	73 1f       	adc	r23, r19
 e36:	84 1f       	adc	r24, r20
 e38:	95 1f       	adc	r25, r21
 e3a:	a0 1d       	adc	r26, r0
 e3c:	08 95       	ret

00000e3e <__prologue_saves__>:
 e3e:	2f 92       	push	r2
 e40:	3f 92       	push	r3
 e42:	4f 92       	push	r4
 e44:	5f 92       	push	r5
 e46:	6f 92       	push	r6
 e48:	7f 92       	push	r7
 e4a:	8f 92       	push	r8
 e4c:	9f 92       	push	r9
 e4e:	af 92       	push	r10
 e50:	bf 92       	push	r11
 e52:	cf 92       	push	r12
 e54:	df 92       	push	r13
 e56:	ef 92       	push	r14
 e58:	ff 92       	push	r15
 e5a:	0f 93       	push	r16
 e5c:	1f 93       	push	r17
 e5e:	cf 93       	push	r28
 e60:	df 93       	push	r29
 e62:	cd b7       	in	r28, 0x3d	; 61
 e64:	de b7       	in	r29, 0x3e	; 62
 e66:	ca 1b       	sub	r28, r26
 e68:	db 0b       	sbc	r29, r27
 e6a:	0f b6       	in	r0, 0x3f	; 63
 e6c:	f8 94       	cli
 e6e:	de bf       	out	0x3e, r29	; 62
 e70:	0f be       	out	0x3f, r0	; 63
 e72:	cd bf       	out	0x3d, r28	; 61
 e74:	09 94       	ijmp

00000e76 <__epilogue_restores__>:
 e76:	2a 88       	ldd	r2, Y+18	; 0x12
 e78:	39 88       	ldd	r3, Y+17	; 0x11
 e7a:	48 88       	ldd	r4, Y+16	; 0x10
 e7c:	5f 84       	ldd	r5, Y+15	; 0x0f
 e7e:	6e 84       	ldd	r6, Y+14	; 0x0e
 e80:	7d 84       	ldd	r7, Y+13	; 0x0d
 e82:	8c 84       	ldd	r8, Y+12	; 0x0c
 e84:	9b 84       	ldd	r9, Y+11	; 0x0b
 e86:	aa 84       	ldd	r10, Y+10	; 0x0a
 e88:	b9 84       	ldd	r11, Y+9	; 0x09
 e8a:	c8 84       	ldd	r12, Y+8	; 0x08
 e8c:	df 80       	ldd	r13, Y+7	; 0x07
 e8e:	ee 80       	ldd	r14, Y+6	; 0x06
 e90:	fd 80       	ldd	r15, Y+5	; 0x05
 e92:	0c 81       	ldd	r16, Y+4	; 0x04
 e94:	1b 81       	ldd	r17, Y+3	; 0x03
 e96:	aa 81       	ldd	r26, Y+2	; 0x02
 e98:	b9 81       	ldd	r27, Y+1	; 0x01
 e9a:	ce 0f       	add	r28, r30
 e9c:	d1 1d       	adc	r29, r1
 e9e:	0f b6       	in	r0, 0x3f	; 63
 ea0:	f8 94       	cli
 ea2:	de bf       	out	0x3e, r29	; 62
 ea4:	0f be       	out	0x3f, r0	; 63
 ea6:	cd bf       	out	0x3d, r28	; 61
 ea8:	ed 01       	movw	r28, r26
 eaa:	08 95       	ret

00000eac <_exit>:
 eac:	f8 94       	cli

00000eae <__stop_program>:
 eae:	ff cf       	rjmp	.-2      	; 0xeae <__stop_program>
